<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>cc &amp;&amp; xy</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pulsating.cn/"/>
  <updated>2019-11-12T15:46:05.821Z</updated>
  <id>http://www.pulsating.cn/</id>
  
  <author>
    <name>xy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用imagemagick实现两张或多张图片图片拼接 覆盖</title>
    <link href="http://www.pulsating.cn/2019/11/12/%E4%BD%BF%E7%94%A8imagemagick%E5%AE%9E%E7%8E%B0%E4%B8%A4%E5%BC%A0%E6%88%96%E5%A4%9A%E5%BC%A0%E5%9B%BE%E7%89%87%E5%9B%BE%E7%89%87%E6%8B%BC%E6%8E%A5-%E8%A6%86%E7%9B%96/"/>
    <id>http://www.pulsating.cn/2019/11/12/%E4%BD%BF%E7%94%A8imagemagick%E5%AE%9E%E7%8E%B0%E4%B8%A4%E5%BC%A0%E6%88%96%E5%A4%9A%E5%BC%A0%E5%9B%BE%E7%89%87%E5%9B%BE%E7%89%87%E6%8B%BC%E6%8E%A5-%E8%A6%86%E7%9B%96/</id>
    <published>2019-11-12T15:40:50.000Z</published>
    <updated>2019-11-12T15:46:05.821Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><code>Imagemagick</code>是一个强大的图像处理库,号称命令行上的photoshop</p></blockquote><ul><li><a href="aa13db8f7cf9">使用GD扩展实现和本篇文章相同的效果</a></li><li><a href="c2ff6c9c43e3">php的imagick扩展和imagemagick的安装教程</a></li></ul><h5 id="1-问题场景"><a href="#1-问题场景" class="headerlink" title="1. 问题场景"></a>1. 问题场景</h5><p>&emsp;&emsp;在进行手上的一个海报项目时,遇到了这样一个需求:<br>&emsp;&emsp;如图,在用户制作一张海报后,最后保存的时候,图片主体<code>body</code>是用户制作的海报,<code>footer</code>是由左右两张二维码组成的,左边为公众号的带参数二维码,右侧是用户自定义的二维码,美工提供一张通用的footer模版,程序来负责动态将二维码替换上去,最终拼接成下面图片示例的样子</p><a id="more"></a><p><img src="https://upload-images.jianshu.io/upload_images/14618365-5507c013705956a1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="海报示例"></p><h5 id="2-为什么使用imagemagick"><a href="#2-为什么使用imagemagick" class="headerlink" title="2. 为什么使用imagemagick"></a>2. 为什么使用imagemagick</h5><p>&emsp;&emsp;整个项目后台使用的是PHP语言,既然涉及到图片处理,第一个想到的肯定是大名鼎鼎的<code>GD</code>库扩展,在使用gd库尝试后,因为性能的原因,可能是我使用的方式不对,合成一张图片的时间长的忍受不了,又果断放弃了,后面又想到使用<code>imagemagick</code>这个工具,试着使用iamgemagick来重写一遍,果然,速度快了许多</p><h5 id="3-实现思路"><a href="#3-实现思路" class="headerlink" title="3. 实现思路"></a>3. 实现思路</h5><p>&emsp;&emsp;a. 将body和footer上下拼接起来<br>&emsp;&emsp;b. 分别将获取的两个二维码图片根据坐标置入左下和右下<br><strong>注:我觉得先进行b步骤,再拼接,效率可能会高一丢丢,但是我也懒得测了,就没有改动</strong></p><h5 id="4-代码部分"><a href="#4-代码部分" class="headerlink" title="4. 代码部分"></a>4. 代码部分</h5><p>直接使用的是imagemagick的命令行指令,没有使用imagick扩展,已上线稳定使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">merge_img</span><span class="params">($file_name, $ad_file_name, $user_qrcode,$template_id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $body = $file_name;<span class="comment">//这个是body的路径</span></span><br><span class="line">        $footer = APPPATH . <span class="string">'../static/img/footer.png'</span>;<span class="comment">//footer是一张模板图</span></span><br><span class="line">        $qrcode = APPPATH . <span class="string">'../'</span> . $user_qrcode;<span class="comment">//右下角用户自定义的二维码</span></span><br><span class="line">        $param_qrcode = <span class="keyword">$this</span>-&gt;param_qrcode($template_id);<span class="comment">//左下角的带参数二维码,param_qrcode()方法返回其路径</span></span><br><span class="line"></span><br><span class="line">        $cmd = <span class="string">'convert -append '</span>.$header.<span class="string">' '</span>.$footer.<span class="string">' '</span>.$ad_file_name.<span class="string">''</span>;<span class="comment">//1.将body和footer拼接,因为body和footer是固定等宽的,所以直接拼接,+append为横向拼接,-append为纵向拼接</span></span><br><span class="line">        $result = exec($cmd);<span class="comment">//执行</span></span><br><span class="line"></span><br><span class="line">        $cmd = <span class="string">'composite -geometry +634+1093 '</span>.$qrcode.<span class="string">' '</span>.$ad_file_name.<span class="string">' '</span>.$ad_file_name.<span class="string">''</span>;<span class="comment">//将用户二维码置入右下角,'+634+1093'为置入位置的坐标</span></span><br><span class="line">        $result = exec($cmd);</span><br><span class="line"></span><br><span class="line">        $cmd = <span class="string">'composite -geometry +27+1093 '</span>.$param_qrcode.<span class="string">' '</span>.$ad_file_name.<span class="string">' '</span>.$ad_file_name.<span class="string">''</span>;<span class="comment">//将带参数二维码置入左下角</span></span><br><span class="line">        $result = exec($cmd);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Imagemagick&lt;/code&gt;是一个强大的图像处理库,号称命令行上的photoshop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;aa13db8f7cf9&quot;&gt;使用GD扩展实现和本篇文章相同的效果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;c2ff6c9c43e3&quot;&gt;php的imagick扩展和imagemagick的安装教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;1-问题场景&quot;&gt;&lt;a href=&quot;#1-问题场景&quot; class=&quot;headerlink&quot; title=&quot;1. 问题场景&quot;&gt;&lt;/a&gt;1. 问题场景&lt;/h5&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在进行手上的一个海报项目时,遇到了这样一个需求:&lt;br&gt;&amp;emsp;&amp;emsp;如图,在用户制作一张海报后,最后保存的时候,图片主体&lt;code&gt;body&lt;/code&gt;是用户制作的海报,&lt;code&gt;footer&lt;/code&gt;是由左右两张二维码组成的,左边为公众号的带参数二维码,右侧是用户自定义的二维码,美工提供一张通用的footer模版,程序来负责动态将二维码替换上去,最终拼接成下面图片示例的样子&lt;/p&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/"/>
    
      <category term="图像处理" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/tags/PHP/"/>
    
      <category term="imagick" scheme="http://www.pulsating.cn/tags/imagick/"/>
    
      <category term="Imagemagick" scheme="http://www.pulsating.cn/tags/Imagemagick/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP框架搭建</title>
    <link href="http://www.pulsating.cn/2019/11/12/ThinkPHP%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.pulsating.cn/2019/11/12/ThinkPHP%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/</id>
    <published>2019-11-12T15:38:23.000Z</published>
    <updated>2019-11-12T15:39:44.399Z</updated>
    
    <content type="html"><![CDATA[<p><code>thinkphp</code>基于<strong><code>MVC</code></strong>的方式来组织,MVC是一种经典的程序设计理念,此模式将你的项目分成三个部分,<code>模型层(model)</code>,<code>视图层(view)</code>,`控制层(controller),MVC为这三个三次的首字母缩写</p><ol><li>下载ThinkPHP框架<br>官网下载:<a href="http://www.thinkphp.cn/" target="_blank" rel="noopener">http://www.thinkphp.cn/</a><br>thinkphp有核心包和完整包之分,我这里选择的是最新版5.0.21的完整版<br><strong>* 核心包</strong>:仅包含thinkphp运行的最主要文件,不包含扩展类,示例,文档<br><strong>* 完整包</strong>:核心包的基础上增加了扩展类,示例及文档</li></ol><p>下载后将文件解压到你的localhost根目录下,我的路径是:<code>D:\phpStudy\WWW</code>,然后重命名目录名为myphpstudy,方便我们使用<br><img src="https://upload-images.jianshu.io/upload_images/14618365-5ed1a4c8d854e68b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重命名"><br>接下来在浏览器地址栏输入:<code>http://localhost/mythinkphp/public/</code>,显示出如下内容,说明你的thinkphp框架可以正常使用了.</p><p>2.目录结构</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">project</span>  应用部署目录</span><br><span class="line">├─<span class="selector-tag">application</span>           应用目录（可设置）</span><br><span class="line">│  ├─<span class="selector-tag">common</span>             公共模块目录（可更改）</span><br><span class="line">│  ├─<span class="selector-tag">index</span>              模块目录(可更改)</span><br><span class="line">│  │  ├─<span class="selector-tag">config</span><span class="selector-class">.php</span>      模块配置文件</span><br><span class="line">│  │  ├─<span class="selector-tag">common</span><span class="selector-class">.php</span>      模块函数文件</span><br><span class="line">│  │  ├─<span class="selector-tag">controller</span>      控制器目录</span><br><span class="line">│  │  ├─<span class="selector-tag">model</span>           模型目录</span><br><span class="line">│  │  ├─<span class="selector-tag">view</span>            视图目录</span><br><span class="line">│  │  └─ ...            更多类库目录</span><br><span class="line">│  ├─<span class="selector-tag">command</span><span class="selector-class">.php</span>        命令行工具配置文件</span><br><span class="line">│  ├─<span class="selector-tag">common</span><span class="selector-class">.php</span>         应用公共（函数）文件</span><br><span class="line">│  ├─<span class="selector-tag">config</span><span class="selector-class">.php</span>         应用（公共）配置文件</span><br><span class="line">│  ├─<span class="selector-tag">database</span><span class="selector-class">.php</span>       数据库配置文件</span><br><span class="line">│  ├─<span class="selector-tag">tags</span><span class="selector-class">.php</span>           应用行为扩展定义文件</span><br><span class="line">│  └─<span class="selector-tag">route</span><span class="selector-class">.php</span>          路由配置文件</span><br><span class="line">├─<span class="selector-tag">extend</span>                扩展类库目录（可定义）</span><br><span class="line">├─<span class="selector-tag">public</span>                <span class="selector-tag">WEB</span> 部署目录（对外访问目录）</span><br><span class="line">│  ├─<span class="selector-tag">static</span>             静态资源存放目录(<span class="selector-tag">css</span>,<span class="selector-tag">js</span>,<span class="selector-tag">image</span>)</span><br><span class="line">│  ├─<span class="selector-tag">index</span><span class="selector-class">.php</span>          应用入口文件</span><br><span class="line">│  ├─<span class="selector-tag">router</span><span class="selector-class">.php</span>         快速测试文件</span><br><span class="line">│  └─<span class="selector-class">.htaccess</span>          用于 <span class="selector-tag">apache</span> 的重写</span><br><span class="line">├─<span class="selector-tag">runtime</span>               应用的运行时目录（可写，可设置）</span><br><span class="line">├─<span class="selector-tag">vendor</span>                第三方类库目录（<span class="selector-tag">Composer</span>）</span><br><span class="line">├─<span class="selector-tag">thinkphp</span>              框架系统目录</span><br><span class="line">│  ├─<span class="selector-tag">lang</span>               语言包目录</span><br><span class="line">│  ├─<span class="selector-tag">library</span>            框架核心类库目录</span><br><span class="line">│  │  ├─<span class="selector-tag">think</span>           <span class="selector-tag">Think</span> 类库包目录</span><br><span class="line">│  │  └─<span class="selector-tag">traits</span>          系统 <span class="selector-tag">Traits</span> 目录</span><br><span class="line">│  ├─<span class="selector-tag">tpl</span>                系统模板目录</span><br><span class="line">│  ├─<span class="selector-class">.htaccess</span>          用于 <span class="selector-tag">apache</span> 的重写</span><br><span class="line">│  ├─<span class="selector-class">.travis</span><span class="selector-class">.yml</span>        <span class="selector-tag">CI</span> 定义文件</span><br><span class="line">│  ├─<span class="selector-tag">base</span><span class="selector-class">.php</span>           基础定义文件</span><br><span class="line">│  ├─<span class="selector-tag">composer</span><span class="selector-class">.json</span>      <span class="selector-tag">composer</span> 定义文件</span><br><span class="line">│  ├─<span class="selector-tag">console</span><span class="selector-class">.php</span>        控制台入口文件</span><br><span class="line">│  ├─<span class="selector-tag">convention</span><span class="selector-class">.php</span>     惯例配置文件</span><br><span class="line">│  ├─<span class="selector-tag">helper</span><span class="selector-class">.php</span>         助手函数文件（可选）</span><br><span class="line">│  ├─<span class="selector-tag">LICENSE</span><span class="selector-class">.txt</span>        授权说明文件</span><br><span class="line">│  ├─<span class="selector-tag">phpunit</span><span class="selector-class">.xml</span>        单元测试配置文件</span><br><span class="line">│  ├─<span class="selector-tag">README</span><span class="selector-class">.md</span>          <span class="selector-tag">README</span> 文件</span><br><span class="line">│  └─<span class="selector-tag">start</span><span class="selector-class">.php</span>          框架引导文件</span><br><span class="line">├─<span class="selector-tag">build</span><span class="selector-class">.php</span>             自动生成定义文件（参考）</span><br><span class="line">├─<span class="selector-tag">composer</span><span class="selector-class">.json</span>         <span class="selector-tag">composer</span> 定义文件</span><br><span class="line">├─<span class="selector-tag">LICENSE</span><span class="selector-class">.txt</span>           授权说明文件</span><br><span class="line">├─<span class="selector-tag">README</span><span class="selector-class">.md</span>             <span class="selector-tag">README</span> 文件</span><br><span class="line">├─<span class="selector-tag">think</span>                 命令行入口文件</span><br></pre></td></tr></table></figure><ol start="3"><li>Hello World<br>这时你可以将框架目录导入到你的IDE中了,方便我们编辑代码,下面我们来试着输出Hello World 吧!<br>找到并打开如图所示的文件位置,将其中代码进行修改<br><img src="https://upload-images.jianshu.io/upload_images/14618365-5505dd971cf24493.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="入口"></li></ol><p>修改后的代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"Hello World"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>这时我们去浏览器地址栏输入<code>http://localhost/mythinkphp/public/</code>就可以看到我们改动后的内容了,是不是很简单呢!<br><img src="https://upload-images.jianshu.io/upload_images/14618365-4d4be39dc00c9209.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Hello World"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;thinkphp&lt;/code&gt;基于&lt;strong&gt;&lt;code&gt;MVC&lt;/code&gt;&lt;/strong&gt;的方式来组织,MVC是一种经典的程序设计理念,此模式将你的项目分成三个部分,&lt;code&gt;模型层(model)&lt;/code&gt;,&lt;code&gt;视图层(view)&lt;/co
      
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/"/>
    
      <category term="ThinkPHP" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/ThinkPHP/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/tags/PHP/"/>
    
      <category term="ThinkPHP" scheme="http://www.pulsating.cn/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP 单色位图取模</title>
    <link href="http://www.pulsating.cn/2019/11/12/PHP-%E5%8D%95%E8%89%B2%E4%BD%8D%E5%9B%BE%E5%8F%96%E6%A8%A1/"/>
    <id>http://www.pulsating.cn/2019/11/12/PHP-%E5%8D%95%E8%89%B2%E4%BD%8D%E5%9B%BE%E5%8F%96%E6%A8%A1/</id>
    <published>2019-11-12T15:24:09.000Z</published>
    <updated>2019-11-12T15:39:35.257Z</updated>
    
    <content type="html"><![CDATA[<p><strong>2018-11-27日更新:</strong><br>&emsp;&emsp;由于没有找到生成<code>.bmp</code>格式图片的好办法,改为使用<code>.wbmp</code>格式,转换和读取都改为<code>.wbmp</code>格式,原来的<code>bmp2hex</code>函数逻辑没有变化,改名为<code>wbmp2hex</code>,并不再使用<code>ImageCreateFromBMP</code>函数,可以收藏一下这个函数还是有用的,最新的代码我也提供了下载在文章末尾</p><a id="more"></a><h4 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段:"></a>准备阶段:</h4><ul><li><p><strong>pctoLCD2002</strong><br>网上找到的一款取模软件,可以读取<code>.bmp</code>图片并生成字模,当然我们还是要用代码来完成,这个只是起到了一个对照作用,我将它放在了我的网盘下供大家下载<br>链接：<a href="https://pan.baidu.com/s/12X9Jbctz7wp8_wOWJCmYdw" target="_blank" rel="noopener">点我下载pctoLCD2002</a> 密码：<code>2lyl</code></p></li><li><p><strong>PHP GD扩展</strong><br>强大的PHP图像生成和处理扩展</p></li><li><p><strong>Windows自带画图工具</strong><br>主要用来生成<code>.bpm</code>格式的图片,目前我还没有找到好的用PHP将<code>.jpg</code>和<code>.png</code>图片转为单色<code>.bmp</code>格式图片的办法,暂时只好用画图工具来生成</p></li></ul><h4 id="操作步骤分解演示"><a href="#操作步骤分解演示" class="headerlink" title="操作步骤分解演示"></a>操作步骤分解演示</h4><h5 id="一-使用画图工具获得-bmp格式图片"><a href="#一-使用画图工具获得-bmp格式图片" class="headerlink" title="一. 使用画图工具获得.bmp格式图片"></a>一. 使用画图工具获得.bmp格式图片</h5><ol><li>使用画图工具打开一张事先准备好的图片,另存为<code>.bmp</code><strong>单色位图</strong>,这样我们就得到了一张<code>.bmp</code>格式的图片,白色背景,只有黑色</li></ol><p><img src="https://upload-images.jianshu.io/upload_images/14618365-b6d0e5ed3d0f89b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开图片"></p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-036a928b957300bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="另存为"></p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-675d730990fe5b64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=".bmp格式"></p><ol start="2"><li>或者我们自己动手来画一张,打开画图工具,调整画布大小为你需要的尺寸,示例为100*70像素,取消勾选保持纵横比,调整好后点击确定,然后我们可以用刷子随便画些什么在画布上,你喜欢就好,然后重复前面的<strong>另存为.bmp单色位图</strong>步骤</li></ol><p><img src="https://upload-images.jianshu.io/upload_images/14618365-58921a2bee3a6c6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ol start="3"><li>pctoLCD2002也可以新建一幅.bmp图片,并且非常简单</li></ol><p><img src="https://upload-images.jianshu.io/upload_images/14618365-d9a0e2dae4a0f54b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pctoLCD2002新建bmp文件"></p><h5 id="二-使用pctoLCD2002取模"><a href="#二-使用pctoLCD2002取模" class="headerlink" title="二. 使用pctoLCD2002取模"></a>二. 使用<strong><code>pctoLCD2002</code></strong>取模</h5><p>找到PCtoLCD2002.exe并双击打开</p><h6 id="1-规则解析-及本文配置项参考"><a href="#1-规则解析-及本文配置项参考" class="headerlink" title="1. 规则解析,及本文配置项参考"></a>1. 规则解析,及本文配置项参考</h6><p>在取字模之前我们先来说下PCtoLCD2002设置项和取模规则</p><ul><li><strong>配置信息:</strong></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/14618365-3e9e397592bf5c44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pctoLCD2002设置项"></p><ul><li><p><strong>取模说明:</strong><br>a. 逐行式逐列式:顾名思义就是读取每张图片时取点时是逐行还是逐列的<br>b. 取模走向:<br><strong>逆向</strong>:从低位到高位<br><strong>顺向</strong>:从高位到低位<br>举例:<br><code>*</code>星号代表图中非空白的像素点,<code>_</code>代表空白的像素点,取八位为一个字节<br><code>* _ _ _ _ _ _ _</code>代表一个字节(为了方便查看,每个符号键我加入了一个空格,实际是没有的)<br>逆向即是从后往前写,表示为00000001<br>顺向即是从前往后写,表示为10000000<br>c. 输出数制:<br>这里选择十六进制,因需选择,不够我需要的是十六进制,后面的代码也只有十六进制的</p></li><li><p><strong>本文取模规则:</strong><br><code>逐行式</code> <code>顺向</code> <code>十六进制</code><br>从第一行开始,每行每隔8个像素点为一个字节,每行结尾最后不足8位,用0补满</p></li></ul><h6 id="2-生成字模"><a href="#2-生成字模" class="headerlink" title="2. 生成字模"></a>2. 生成字模</h6><p>设置好规则后,打开之前制作的.bmp图片,点击生成字模,这时下方会生成出十六进制串,如图:</p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-949d42ff637fec24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>但是这还不是我最后想要的格式,需要处理一下:</p><ul><li>去掉开始处和结束处的文件路径</li><li>去掉所有的标点符号<code>,</code>和<code>&#39;{&#39; &#39;}&#39;</code></li><li>去掉十六进制的标识部分,所有的<code>0x</code></li></ul><p>最后得到一串连贯的字符串,类似:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0000000000000007</span>F8000000000000000000000000003FFC00000000000000000000000000000003FF80000000</span><br></pre></td></tr></table></figure><p>这就是我们最终需要的部分了!下面我们用代码来实现这个功能:</p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决:"></a>问题解决:</h4><h5 id="一-实现过程及思路"><a href="#一-实现过程及思路" class="headerlink" title="一. 实现过程及思路"></a>一. 实现过程及思路</h5><h6 id="0-生成单色位图"><a href="#0-生成单色位图" class="headerlink" title="0. 生成单色位图"></a>0. 生成单色位图</h6><p>卡在这里好久,钻进了死胡同,其实.wbmp的图片完全符合我的要求:<br>GD库就可以将<code>jpg/png</code>转换成<code>wbmp</code>格式,使用时可以调节<code>threshold</code>参数,解释如下,我理解为精度不知道准不准确,也没有查到阀值到底是什么意思…</p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-a133d36f74a84e72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="threshold"></p><p>生成<code>.wbmp</code>格式图片代码示例:</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$file</span>name = <span class="string">'static/img/1.jpg'</span>;</span><br><span class="line"><span class="symbol">$pat</span>h = <span class="string">'static/img/11.wbmp'</span>;</span><br><span class="line"><span class="symbol">$image</span> = getimagesize(<span class="symbol">$file</span>name);</span><br><span class="line">jpeg2wbmp(<span class="symbol">$file</span>name, <span class="symbol">$pat</span>h, <span class="symbol">$image</span>[<span class="number">1</span>], <span class="symbol">$image</span>[<span class="number">0</span>], <span class="number">5</span>);<span class="comment">//threshold == 5时,和给的软件转换后结果完全一致</span></span><br></pre></td></tr></table></figure><p>图片样式:</p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-1db851391b978ca4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=".wbmp格式"></p><h6 id="1-读取-wbmp格式图片-原读取-bmp格式"><a href="#1-读取-wbmp格式图片-原读取-bmp格式" class="headerlink" title="1. 读取.wbmp格式图片(原读取.bmp格式)"></a>1. 读取.wbmp格式图片(原读取.bmp格式)</h6><p>使用gd库的imagecreatefromwbmp函数:</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$file</span>name = <span class="string">'static/img/11.wbmp'</span>;</span><br><span class="line"><span class="symbol">$im</span> = imagecreatefromwbmp(<span class="symbol">$file</span>name);</span><br></pre></td></tr></table></figure><p>安装好GD库扩展后,我发现gd库只能读取.wbmp文件,并不支持.bmp文件,我的gd库版本信息如下<code>gd_info()</code>,经过一番google,找到了一个可以使用的读取.bmp的函数<code>ImageCreateFromBMP()</code>,感谢前辈</p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-e4ddf9d0efeb1393.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="gd_info()"></p><h6 id="2-逐个像素读取"><a href="#2-逐个像素读取" class="headerlink" title="2. 逐个像素读取"></a>2. 逐个像素读取</h6><p>可以读取.wbmp格式了,我们该如何能得出每个像素的颜色值呢?<br>通过查看gd库文档过程,我发现一个函数<code>imagecolorat()</code>,可以根据传入的位置,获取每个像素的索引值<br>使用示例:</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 取得一点的颜色</span></span><br><span class="line"><span class="symbol">$file</span>_name = <span class="string">''</span>;<span class="comment">//wbmp图片路径</span></span><br><span class="line"><span class="symbol">$im</span> = imagecreatefromwbmp(<span class="symbol">$file</span>_name);<span class="comment">//读取wbmp格式</span></span><br><span class="line"><span class="symbol">$start</span>_x = <span class="number">5</span>;<span class="comment">//行,从0开始</span></span><br><span class="line"><span class="symbol">$start</span>_y = <span class="number">10</span>;<span class="comment">//列,从0开始</span></span><br><span class="line"><span class="symbol">$color</span>_index = imagecolorat(<span class="symbol">$im</span>, <span class="symbol">$start</span>_x, <span class="symbol">$start</span>_y);</span><br><span class="line">print_r(<span class="symbol">$color</span>_index);</span><br></pre></td></tr></table></figure><h6 id="3-获取图片宽高"><a href="#3-获取图片宽高" class="headerlink" title="3. 获取图片宽高"></a>3. 获取图片宽高</h6><p>第2步中可以获取每个像素中的值了,但是我们总不能每个点都手动传入,这时我们就需要获取图片的宽高了</p><p>gd库中有获取图片宽高的函数<code>imagesx()</code>和<code>imagesy()</code>,代码示例:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$im = imagecreatefromwbmp($file_name);<span class="comment">//读取bmp格式,非gd库</span></span><br><span class="line">$width = imagesx($im);</span><br><span class="line">$height = imagesy($im);</span><br><span class="line"><span class="keyword">echo</span> $width.<span class="string">'*'</span>.$height;</span><br></pre></td></tr></table></figure><p>到这里,最主要的部分都已经可以获取到了,后面就是逻辑部分了(代码中可以看到具体实现方式):</p><ul><li>根据图片的宽高,逐行逐点读取每个像素的值,每8位组合成1个字节,然后取模,再转为16进制</li><li>检测每一行的最后是否满足8个像素,不足则用0补满</li><li>最终将每一行组合到一起,组成16进制字符串</li></ul><h5 id="二-源码"><a href="#二-源码" class="headerlink" title="二. 源码"></a>二. 源码</h5><p><strong>整个过程可以大概分为三步完成,你可以根据自己的需求参考或者直接copy使用,如果对你有帮助,希望可以点个赞,转载请注明本篇文章链接地址及作者,谢谢!</strong></p><ul><li>将普通<code>jpg/png</code>格式转为<code>.wbmp</code><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$file</span>name = <span class="string">'static/img/1.jpg'</span>;</span><br><span class="line"><span class="symbol">$pat</span>h = <span class="string">'static/img/11.wbmp'</span>;</span><br><span class="line"><span class="symbol">$image</span> = getimagesize(<span class="symbol">$file</span>name);</span><br><span class="line">jpeg2wbmp(<span class="symbol">$file</span>name, <span class="symbol">$pat</span>h, <span class="symbol">$image</span>[<span class="number">1</span>], <span class="symbol">$image</span>[<span class="number">0</span>], <span class="number">5</span>);<span class="comment">//threshold == 5时,和给的软件转换后结果完全一致</span></span><br></pre></td></tr></table></figure></li><li>读取<code>.wbmp</code>格式图片<figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$file</span>name = <span class="string">'static/img/11.wbmp'</span>;</span><br><span class="line"><span class="symbol">$im</span> = imagecreatefromwbmp(<span class="symbol">$file</span>name);</span><br></pre></td></tr></table></figure></li><li>将<code>.wbmp</code>转为<code>hex_str</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $im</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     * Commented by liu</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">wbmp2hex</span><span class="params">($im)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $width = imagesx($im);</span><br><span class="line">        $height = imagesy($im);</span><br><span class="line">        $num = $width % <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">        $hex_str = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span> ($start_y = <span class="number">0</span>; $start_y &lt; $height; $start_y++) &#123;</span><br><span class="line">            $binary_str = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">for</span> ($start_x = <span class="number">0</span>; $start_x &lt; $width; $start_x++) &#123;</span><br><span class="line">                $color_index = imagecolorat($im, $start_x, $start_y);<span class="comment">//指定像素的索引值</span></span><br><span class="line"></span><br><span class="line">                $binary_str .= $color_index == <span class="number">1</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> ((<span class="number">1</span> + $start_x) % <span class="number">8</span> == <span class="number">0</span> &amp;&amp; $start_x != <span class="number">0</span>) &#123;<span class="comment">//每隔8位转换1次</span></span><br><span class="line">                    $hex = (string)dechex(bindec($binary_str));</span><br><span class="line">                    $hex = strlen($hex) == <span class="number">1</span> ? <span class="string">'0'</span> . $hex : $hex;<span class="comment">//补0</span></span><br><span class="line">                    $hex_str .= $hex;</span><br><span class="line">                    $binary_str = <span class="string">''</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//这时如果$binary_str不为空,说明需要向后补0</span></span><br><span class="line">            <span class="keyword">if</span> ($num) &#123;</span><br><span class="line">                <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">8</span> - $num; $i++) &#123;</span><br><span class="line">                    $binary_str .= <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                $hex = (string)dechex(bindec($binary_str));</span><br><span class="line">                $hex = strlen($hex) == <span class="number">1</span> ? <span class="string">'0'</span> . $hex : $hex;<span class="comment">//补0</span></span><br><span class="line">                $hex_str .= $hex;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $hex_str = strtoupper($hex_str);<span class="comment">//转为大写</span></span><br><span class="line">        <span class="keyword">return</span> $hex_str;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>最后附上读取<code>.bmp</code>格式图片的函数:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Commented by liu</span></span><br><span class="line"><span class="comment"> * Create on 2018/11/23 17:51</span></span><br><span class="line"><span class="comment"> * Class Image_api</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Image_api</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span> <span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ImageCreateFromBMP函数,读取bmp格式图片</span></span><br><span class="line"><span class="comment">     * 注:phpGD扩展中没有ImageCreateFromBMP函数,只有ImageCreateFromWBMP</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $filename</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|resource</span></span><br><span class="line"><span class="comment">     * Commented by liu</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ImageCreateFromBMP</span><span class="params">($filename)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//Ouverture du fichier en mode binaire</span></span><br><span class="line">        <span class="keyword">if</span> (!$f1 = fopen($filename, <span class="string">"rb"</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1 : Chargement des ent�tes FICHIER</span></span><br><span class="line">        $FILE = unpack(<span class="string">"vfile_type/Vfile_size/Vreserved/Vbitmap_offset"</span>, fread($f1, <span class="number">14</span>));</span><br><span class="line">        <span class="keyword">if</span> ($FILE[<span class="string">'file_type'</span>] != <span class="number">19778</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2 : Chargement des ent�tes BMP</span></span><br><span class="line">        $BMP = unpack(<span class="string">'Vheader_size/Vwidth/Vheight/vplanes/vbits_per_pixel'</span> .</span><br><span class="line">            <span class="string">'/Vcompression/Vsize_bitmap/Vhoriz_resolution'</span> .</span><br><span class="line">            <span class="string">'/Vvert_resolution/Vcolors_used/Vcolors_important'</span>, fread($f1, <span class="number">40</span>));</span><br><span class="line">        $BMP[<span class="string">'colors'</span>] = pow(<span class="number">2</span>, $BMP[<span class="string">'bits_per_pixel'</span>]);</span><br><span class="line">        <span class="keyword">if</span> ($BMP[<span class="string">'size_bitmap'</span>] == <span class="number">0</span>)</span><br><span class="line">            $BMP[<span class="string">'size_bitmap'</span>] = $FILE[<span class="string">'file_size'</span>] - $FILE[<span class="string">'bitmap_offset'</span>];</span><br><span class="line">        $BMP[<span class="string">'bytes_per_pixel'</span>] = $BMP[<span class="string">'bits_per_pixel'</span>] / <span class="number">8</span>;</span><br><span class="line">        $BMP[<span class="string">'bytes_per_pixel2'</span>] = ceil($BMP[<span class="string">'bytes_per_pixel'</span>]);</span><br><span class="line">        $BMP[<span class="string">'decal'</span>] = ($BMP[<span class="string">'width'</span>] * $BMP[<span class="string">'bytes_per_pixel'</span>] / <span class="number">4</span>);</span><br><span class="line">        $BMP[<span class="string">'decal'</span>] -= floor($BMP[<span class="string">'width'</span>] * $BMP[<span class="string">'bytes_per_pixel'</span>] / <span class="number">4</span>);</span><br><span class="line">        $BMP[<span class="string">'decal'</span>] = <span class="number">4</span> - (<span class="number">4</span> * $BMP[<span class="string">'decal'</span>]);</span><br><span class="line">        <span class="keyword">if</span> ($BMP[<span class="string">'decal'</span>] == <span class="number">4</span>)</span><br><span class="line">            $BMP[<span class="string">'decal'</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3 : Chargement des couleurs de la palette</span></span><br><span class="line">        $PALETTE = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> ($BMP[<span class="string">'colors'</span>] &lt; <span class="number">16777216</span>) &#123;</span><br><span class="line">            $PALETTE = unpack(<span class="string">'V'</span> . $BMP[<span class="string">'colors'</span>], fread($f1, $BMP[<span class="string">'colors'</span>] * <span class="number">4</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4 : Cr�ation de l'image</span></span><br><span class="line">        $IMG = fread($f1, $BMP[<span class="string">'size_bitmap'</span>]);</span><br><span class="line">        $VIDE = chr(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        $res = imagecreatetruecolor($BMP[<span class="string">'width'</span>], $BMP[<span class="string">'height'</span>]);</span><br><span class="line">        $P = <span class="number">0</span>;</span><br><span class="line">        $Y = $BMP[<span class="string">'height'</span>] - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> ($Y &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            $X = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ($X &lt; $BMP[<span class="string">'width'</span>]) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($BMP[<span class="string">'bits_per_pixel'</span>] == <span class="number">24</span>)</span><br><span class="line">                    $COLOR = unpack(<span class="string">"V"</span>, substr($IMG, $P, <span class="number">3</span>) . $VIDE);</span><br><span class="line">                <span class="keyword">elseif</span> ($BMP[<span class="string">'bits_per_pixel'</span>] == <span class="number">16</span>) &#123;</span><br><span class="line">                    $COLOR = unpack(<span class="string">"n"</span>, substr($IMG, $P, <span class="number">2</span>));</span><br><span class="line">                    $COLOR[<span class="number">1</span>] = $PALETTE[$COLOR[<span class="number">1</span>] + <span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($BMP[<span class="string">'bits_per_pixel'</span>] == <span class="number">8</span>) &#123;</span><br><span class="line">                    $COLOR = unpack(<span class="string">"n"</span>, $VIDE . substr($IMG, $P, <span class="number">1</span>));</span><br><span class="line">                    $COLOR[<span class="number">1</span>] = $PALETTE[$COLOR[<span class="number">1</span>] + <span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($BMP[<span class="string">'bits_per_pixel'</span>] == <span class="number">4</span>) &#123;</span><br><span class="line">                    $COLOR = unpack(<span class="string">"n"</span>, $VIDE . substr($IMG, floor($P), <span class="number">1</span>));</span><br><span class="line">                    <span class="keyword">if</span> (($P * <span class="number">2</span>) % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &gt;&gt; <span class="number">4</span>);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x0F</span>);</span><br><span class="line">                    $COLOR[<span class="number">1</span>] = $PALETTE[$COLOR[<span class="number">1</span>] + <span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($BMP[<span class="string">'bits_per_pixel'</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">                    $COLOR = unpack(<span class="string">"n"</span>, $VIDE . substr($IMG, floor($P), <span class="number">1</span>));</span><br><span class="line">                    <span class="keyword">if</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">0</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = $COLOR[<span class="number">1</span>] &gt;&gt; <span class="number">7</span>;</span><br><span class="line">                    <span class="keyword">elseif</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">1</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x40</span>) &gt;&gt; <span class="number">6</span>;</span><br><span class="line">                    <span class="keyword">elseif</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">2</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x20</span>) &gt;&gt; <span class="number">5</span>;</span><br><span class="line">                    <span class="keyword">elseif</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">3</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x10</span>) &gt;&gt; <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">elseif</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">4</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x8</span>) &gt;&gt; <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">elseif</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">5</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x4</span>) &gt;&gt; <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">elseif</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">6</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x2</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">elseif</span> (($P * <span class="number">8</span>) % <span class="number">8</span> == <span class="number">7</span>)</span><br><span class="line">                        $COLOR[<span class="number">1</span>] = ($COLOR[<span class="number">1</span>] &amp; <span class="number">0x1</span>);</span><br><span class="line">                    $COLOR[<span class="number">1</span>] = $PALETTE[$COLOR[<span class="number">1</span>] + <span class="number">1</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">                imagesetpixel($res, $X, $Y, $COLOR[<span class="number">1</span>]);</span><br><span class="line">                $X++;</span><br><span class="line">                $P += $BMP[<span class="string">'bytes_per_pixel'</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            $Y--;</span><br><span class="line">            $P += $BMP[<span class="string">'decal'</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Fermeture du fichier</span></span><br><span class="line">        fclose($f1);</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;2018-11-27日更新:&lt;/strong&gt;&lt;br&gt;&amp;emsp;&amp;emsp;由于没有找到生成&lt;code&gt;.bmp&lt;/code&gt;格式图片的好办法,改为使用&lt;code&gt;.wbmp&lt;/code&gt;格式,转换和读取都改为&lt;code&gt;.wbmp&lt;/code&gt;格式,原来的&lt;code&gt;bmp2hex&lt;/code&gt;函数逻辑没有变化,改名为&lt;code&gt;wbmp2hex&lt;/code&gt;,并不再使用&lt;code&gt;ImageCreateFromBMP&lt;/code&gt;函数,可以收藏一下这个函数还是有用的,最新的代码我也提供了下载在文章末尾&lt;/p&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/"/>
    
      <category term="图像处理" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="GD" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/GD/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/tags/PHP/"/>
    
      <category term="GD" scheme="http://www.pulsating.cn/tags/GD/"/>
    
      <category term="pctoLCD2002" scheme="http://www.pulsating.cn/tags/pctoLCD2002/"/>
    
      <category term="bmp" scheme="http://www.pulsating.cn/tags/bmp/"/>
    
      <category term="位图" scheme="http://www.pulsating.cn/tags/%E4%BD%8D%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Sphinx Linux 下安装过程</title>
    <link href="http://www.pulsating.cn/2019/11/12/Sphinx-Linux-%E4%B8%8B%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/"/>
    <id>http://www.pulsating.cn/2019/11/12/Sphinx-Linux-%E4%B8%8B%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</id>
    <published>2019-11-12T15:17:58.000Z</published>
    <updated>2019-11-12T15:39:38.503Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;之前记录过一篇<a href="https://www.jianshu.com/p/1be12635ccbb" target="_blank" rel="noopener">Sphinx在Windows上的安装步骤</a>,这篇当然就是Linux系统的安装步骤啦</p><a id="more"></a><p><strong>1. 下载sphinx包</strong><br>下载的是当前最新版3.1.1,我将压缩包存在了<code>/usr/local/src/</code>目录下<br><code>wget -q http://sphinxsearch.com/files/sphinx-3.1.1-612d99f-linux-amd64.tar.gz</code> 下载时间可能比较长需要耐心等待一会</p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-404c0f04014aa56d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="压缩包名称"></p><p><strong>2. 解压</strong><br><code>tar zxf sphinx-3.1.1-612d99f-linux-amd64.tar.gz</code>解压<br><code>mv sphinx-3.1.1 sphinx</code> 重命名一下,方便操作吧<br><code>cd sphinx</code> 进入看下目录列表,其中var是需要后面创建的,请继续往下看<br><img src="https://upload-images.jianshu.io/upload_images/14618365-33d59a1897fe1350.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解压后的目录"></p><p><strong>3. 编辑配置文件</strong><br>配置文件在<code>etc</code>目录下,有两个配置文件示例,其中<code>sphinx.conf</code>是完整版的配置项,并且有英文注释,有兴趣的可以了解一下,我们这里使用下面的<code>sphinx.conf.dist</code>简洁版<br>复制一份<code>sphinx.conf.dist</code>到<code>bin</code>目录下,重命名为<code>sphinx.conf</code><br><code>vi sphinx.conf</code> 打开编辑配置文件,这里我直接贴出我自己的配置内容,可以正常跑起来的,关于其他配置项可以看我的另外一篇<a href="https://www.jianshu.com/p/be12aa194f15" target="_blank" rel="noopener">Sphinx 配置文件sphinx.conf配置项全解析</a></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//数据源配置,也就是数据来源</span></span><br><span class="line">source item</span><br><span class="line">&#123;</span><br><span class="line">        type                    = mysql</span><br><span class="line">        sql_host                = HOST <span class="comment">//数据库</span></span><br><span class="line">        sql_user                = USER <span class="comment">//用户名</span></span><br><span class="line">        sql_pass                = PASS <span class="comment">//数据库密码</span></span><br><span class="line">        sql_db                  = poster 数据库名称</span><br><span class="line">        sql_port                = <span class="number">3306</span>  # optional, default is <span class="number">3306</span></span><br><span class="line">        sql_query_pre           = <span class="keyword">SET</span> NAMES <span class="comment">utf8</span> </span><br><span class="line">        sql_query               <span class="comment">= \</span></span><br><span class="line">                SELECT <span class="comment">id,name,UNIX_TIMESTAMP(ctime) \</span></span><br><span class="line">                FROM <span class="comment">item</span></span><br><span class="line">        sql_attr_timestamp  <span class="comment">= ctime</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//索引配置</span></span><br><span class="line">index <span class="comment">item</span></span><br><span class="line">&#123;</span><br><span class="line">        source                  <span class="comment">= item</span> //数据源</span><br><span class="line">        path                    <span class="comment">=</span> /usr/<span class="comment">local</span>/src/<span class="comment">sphinx</span>/var/<span class="comment">data</span> 索引存放目录</span><br><span class="line">        min_word_len            <span class="comment">= 1</span> </span><br><span class="line">        ngram_len               <span class="comment">= 1</span></span><br><span class="line">        ngram_chars             <span class="comment">= U+3000..U+2FA1F</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">indexer</span><br><span class="line">&#123;</span><br><span class="line">        mem_limit               <span class="comment">= 128M</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//搜索服务</span></span><br><span class="line">searchd</span><br><span class="line">&#123;</span><br><span class="line">        listen                  <span class="comment">= 9312</span></span><br><span class="line">        listen                  <span class="comment">= 9306:mysql41</span></span><br><span class="line">        log                     <span class="comment">=</span> /usr/<span class="comment">local</span>/src/<span class="comment">sphinx</span>/var/<span class="comment">log</span>/searchd.<span class="built-in">log</span></span><br><span class="line">        query_log               = /<span class="comment">usr</span>/local/<span class="comment">src</span>/sphinx/<span class="comment">var</span>/<span class="built-in">log</span>/<span class="comment">query.log</span></span><br><span class="line">        read_timeout            <span class="comment">= 5</span></span><br><span class="line">        max_children            <span class="comment">= 30</span></span><br><span class="line">        pid_file                <span class="comment">=</span> /usr/<span class="comment">local</span>/src/<span class="comment">sphinx</span>/var/<span class="comment">log</span>/searchd.pid</span><br><span class="line">        seamless_rotate         = <span class="number">1</span></span><br><span class="line">        preopen_indexes         = <span class="number">1</span></span><br><span class="line">        unlink_old              = <span class="number">1</span></span><br><span class="line">        binlog_path             = /<span class="comment">usr</span>/local/<span class="comment">src</span>/sphinx/<span class="comment">var</span>/data</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件中需要配置几个目录.分别是<strong>log</strong>,<strong>query_log</strong>,<strong>pid_file</strong>,<strong>binlog_path</strong>,我们回到sphinx下,新建一个目录var,然后进入再新建一个data目录和一个log目录<br><code>mkdir var</code><br><code>cd var</code><br><code>mkdir data</code><br><code>mkdir log</code><br>如图:<br><img src="https://upload-images.jianshu.io/upload_images/14618365-252597381f2da18b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="var目录"></p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-87dec842ab8e3fc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ol start="4"><li>建立索引<br>首先进入到<code>bin</code>目录下,执行下面的指令<br><code>./indexer -c sphinx.conf item</code> <strong>item</strong>为刚才在配置文件中建立的索引名称</li></ol><blockquote><p>这里有个大坑,耽误了好久时间,我用的是ubuntu的系统,当我在执行<code>./indexer -c sphinx.conf item</code>时,出现了一个错误:<strong><em>sql_connect: failed to load libmysqlclient (or libmariadb)</em></strong>,加载libmysqlclient失败,然后我在/usr/lib/x86_64-linux-gnu/目录下发现了我的libmysqlclient,并不是没有安装的<br><img src="https://upload-images.jianshu.io/upload_images/14618365-05c1f3a9443d1e3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="libmysqlclient"><br>然后我通过google试着找出问题的答案,然而只有两个相关结果,解决方式是建立软链接,并且将libmysqlclient所在的目录加入到环境变量,我照做了之后发现问题并没有顺利解决,最后,我试着下载所有的依赖<br><code>apt-get install libmysqlclient18 libmysqlclient-dev libmysqlcppconn7 libmysqlcppconn-dev</code><br>等待完成,然后忽略error,执行<br><code>apt-get update</code><br>等待结束后,再执行建立索引命令,解决了这个问题</p></blockquote><p><strong>5. 开启搜索服务</strong><br><code>./searchd</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;之前记录过一篇&lt;a href=&quot;https://www.jianshu.com/p/1be12635ccbb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sphinx在Windows上的安装步骤&lt;/a&gt;,这篇当然就是Linux系统的安装步骤啦&lt;/p&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/"/>
    
      <category term="Sphinx" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Sphinx/"/>
    
      <category term="Linux" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Linux/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/tags/PHP/"/>
    
      <category term="Sphinx" scheme="http://www.pulsating.cn/tags/Sphinx/"/>
    
      <category term="Linux" scheme="http://www.pulsating.cn/tags/Linux/"/>
    
      <category term="Sphinxapi" scheme="http://www.pulsating.cn/tags/Sphinxapi/"/>
    
  </entry>
  
  <entry>
    <title>Sphinx 配置文件sphinx.conf配置项全解析</title>
    <link href="http://www.pulsating.cn/2019/11/12/Sphinx-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6sphinx-conf%E9%85%8D%E7%BD%AE%E9%A1%B9%E5%85%A8%E8%A7%A3%E6%9E%90/"/>
    <id>http://www.pulsating.cn/2019/11/12/Sphinx-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6sphinx-conf%E9%85%8D%E7%BD%AE%E9%A1%B9%E5%85%A8%E8%A7%A3%E6%9E%90/</id>
    <published>2019-11-12T15:12:36.000Z</published>
    <updated>2019-11-12T15:39:41.361Z</updated>
    
    <content type="html"><![CDATA[<ul><li><strong>source</strong>：数据源，数据是从什么地方来的。</li><li><strong>index</strong>：索引，当有数据源之后，从数据源处构建索引。索引实际上就是相当于一个字典检索。有了整本字典内容以后，才会有字典检索。</li><li><strong>searchd</strong>：提供搜索查询服务。它一般是以deamon的形式运行在后台的。</li><li><strong>indexer</strong>：构建索引的服务。当要重新构建索引的时候，就是调用indexer这个命令。</li></ul><a id="more"></a><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据源src1</span></span><br><span class="line">source src1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 说明数据源的类型。数据源的类型可以是：mysql，pgsql，mssql，xmlpipe，odbc，python</span></span><br><span class="line">    <span class="comment">// 有人会奇怪，python是一种语言怎么可以成为数据源呢？</span></span><br><span class="line">    <span class="comment">// python作为一种语言，可以操作任意其他的数据来源来获取数据，更多数据请看：（http://www.coreseek.cn/products-install/python/）</span></span><br><span class="line">    type            = mysql</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 下面是sql数据库特有的端口，用户名，密码，数据库名等。</span></span><br><span class="line">    sql_host        = localhost</span><br><span class="line">    sql_user        = test</span><br><span class="line">    sql_pass        =</span><br><span class="line">    sql_db          = test</span><br><span class="line">    sql_port        = <span class="number">3306</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是使用unix sock连接可以使用这个。</span></span><br><span class="line">    # sql_sock      = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">    <span class="comment">// indexer和mysql之间的交互，需要考虑到效率和安全性。</span></span><br><span class="line">    <span class="comment">// 比如考虑到效率，他们两者之间的交互需要使用压缩协议；考虑到安全，他们两者之间的传输需要使用ssl</span></span><br><span class="line">    <span class="comment">// 那么这个参数就代表这个意思，0/32/2048/32768  无/使用压缩协议/握手后切换到ssl/Mysql 4.1版本身份认证。</span></span><br><span class="line">    # mysql_connect_flags   = <span class="number">32</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当mysql_connect_flags设置为2048（ssl）的时候，下面几个就代表ssl连接所需要使用的几个参数。</span></span><br><span class="line">    # mysql_ssl_cert        = /etc/ssl/client-cert.pem</span><br><span class="line">    # mysql_ssl_key     = /etc/ssl/client-key.pem</span><br><span class="line">    # mysql_ssl_ca      = /etc/ssl/cacert.pem</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mssql特有，是否使用windows登陆</span></span><br><span class="line">    # mssql_winauth     = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// mssql特有，是使用unicode还是单字节数据。</span></span><br><span class="line">    # mssql_unicode     = <span class="number">1</span> # request Unicode data <span class="keyword">from</span> server</span><br><span class="line"></span><br><span class="line">    <span class="comment">// odbc的dsn串</span></span><br><span class="line">    # odbc_dsn      = DBQ=C:\data;DefaultDir=C:\data;Driver=&#123;Microsoft Text Driver (*.txt; *.csv)&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// sql某一列的缓冲大小，一般是针对字符串来说的。</span></span><br><span class="line">    <span class="comment">// 为什么要有这么一种缓冲呢？</span></span><br><span class="line">    <span class="comment">// 有的字符串，虽然长度很长，但是实际上并没有使用那么长的字符，所以在Sphinx并不会收录所有的字符，而是给每个属性一个缓存作为长度限制。</span></span><br><span class="line">    <span class="comment">// 默认情况下非字符类型的属性是1KB，字符类型的属性是1MB。</span></span><br><span class="line">    <span class="comment">// 而如果想要配置这个buffer的话，就可以在这里进行配置了。</span></span><br><span class="line">    # sql_column_buffers    = content=<span class="number">12</span>M, comments=<span class="number">1</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// indexer的sql执行前需要执行的操作。</span></span><br><span class="line">    # sql_query_pre     = SET NAMES utf8</span><br><span class="line">    # sql_query_pre     = SET SESSION query_cache_type=OFF</span><br><span class="line"></span><br><span class="line">    <span class="comment">// indexer的sql执行语句</span></span><br><span class="line">    sql_query       = \</span><br><span class="line">        SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content \</span><br><span class="line">        FROM documents</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有的时候有多个表，我们想要查询的字段在其他表中。这个时候就需要对sql_query进行join操作。</span></span><br><span class="line">    <span class="comment">// 而这个join操作可能非常慢，导致建立索引的时候特别慢，那么这个时候，就可以考虑在sphinx端进行join操作了。</span></span><br><span class="line">    <span class="comment">// sql_joined_field是增加一个字段，这个字段是从其他表查询中查询出来的。</span></span><br><span class="line">    <span class="comment">// 这里封号后面的查询语句是有要求的，如果是query，则返回id和查询字段，如果是payload-query，则返回id，查询字段和权重。</span></span><br><span class="line">    <span class="comment">// 并且这里的后一个查询需要按照id进行升序排列。</span></span><br><span class="line">    # sql_joined_field  = tags <span class="keyword">from</span> query; SELECT docid, CONCAT(<span class="string">'tag'</span>,tagid) FROM tags ORDER BY docid ASC</span><br><span class="line">    # sql_joined_field  = wtags <span class="keyword">from</span> payload-query; SELECT docid, tag, tagweight FROM tags ORDER BY docid ASC</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 外部文件字段，意思就是一个表中，有一个字段存的是外部文件地址，但是实际的字段内容在文件中。比如这个字段叫做content_file_path。</span></span><br><span class="line">    <span class="comment">// 当indexer建立索引的时候，查到这个字段，就读取这个文件地址，然后加载，并进行分词和索引建立等操作。</span></span><br><span class="line">    # sql_file_field        = content_file_path</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当数据源数据太大的时候，一个sql语句查询下来往往很有可能锁表等操作。</span></span><br><span class="line">    <span class="comment">// 那么我么就可以使用多次查询，那么这个多次查询就需要有个范围和步长，sql_query_range和sql_range_step就是做这个使用的。</span></span><br><span class="line">    <span class="comment">// 获取最大和最小的id，然后根据步长来获取数据。比如下面的例子，如果有4500条数据，这个表建立索引的时候就会进行5次sql查询。 </span></span><br><span class="line">    <span class="comment">// 而5次sql查询每次的间隔时间是使用sql_ranged_rhrottle来进行设置的。单位是毫秒。</span></span><br><span class="line">    # sql_query_range       = SELECT MIN(id),MAX(id) FROM documents</span><br><span class="line">    # sql_range_step        = <span class="number">1000</span></span><br><span class="line">    # sql_ranged_throttle   = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下面都是些不同属性的数据了</span></span><br><span class="line">    <span class="comment">// 先要了解属性的概念：属性是存在索引中的，它不进行全文索引，但是可以用于过滤和排序。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// uint无符号整型属性</span></span><br><span class="line">    sql_attr_uint       = group_id</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// bool属性</span></span><br><span class="line">    # sql_attr_bool     = is_deleted</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 长整型属性</span></span><br><span class="line">    # sql_attr_bigint       = my_bigint_id</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 时间戳属性，经常被用于做排序</span></span><br><span class="line">    sql_attr_timestamp  = date_added</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符串排序属性。一般我们按照字符串排序的话，我们会将这个字符串存下来进入到索引中，然后在查询的时候比较索引中得字符大小进行排序。</span></span><br><span class="line">    <span class="comment">// 但是这个时候索引就会很大，于是我们就想到了一个方法，我们在建立索引的时候，先将字符串值从数据库中取出，暂存，排序。</span></span><br><span class="line">    <span class="comment">// 然后给排序后的数组分配一个序号，然后在建立索引的时候，就将这个序号存入到索引中去。这样在查询的时候也就能完成字符串排序的操作。</span></span><br><span class="line">    <span class="comment">// 这，就是这个字段的意义。</span></span><br><span class="line">    # sql_attr_str2ordinal  = author_name</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 浮点数属性，经常在查询地理经纬度的时候会用到。</span></span><br><span class="line">    # sql_attr_float        = lat_radians</span><br><span class="line">    # sql_attr_float        = long_radians</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多值属性（MVA）</span></span><br><span class="line">    <span class="comment">// 试想一下，有一个文章系统，每篇文章都有多个标签，这个文章就叫做多值属性。</span></span><br><span class="line">    <span class="comment">// 我要对某个标签进行查询过滤，那么在建立查询的时候就应该把这个标签的值放入到索引中。</span></span><br><span class="line">    <span class="comment">// 这个字段，sql_attr_multi就是用来做这个事情的。</span></span><br><span class="line">    # sql_attr_multi        = uint tag <span class="keyword">from</span> query; SELECT docid, tagid FROM tags</span><br><span class="line">    # sql_attr_multi        = uint tag <span class="keyword">from</span> ranged-query; \</span><br><span class="line">    #   SELECT docid, tagid FROM tags WHERE id&gt;=$start AND id&lt;=$end; \</span><br><span class="line">    #   SELECT MIN(docid), MAX(docid) FROM tags</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符串属性。</span></span><br><span class="line">    # sql_attr_string       = stitle</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文档词汇数记录属性。比如下面就是在索引建立的时候增加一个词汇数的字段</span></span><br><span class="line">    # sql_attr_str2wordcount    = stitle</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符串字段，可全文搜索，可返回原始文本信息。</span></span><br><span class="line">    # sql_field_string  = author</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文档词汇数记录字段，可全文搜索，可返回原始信息</span></span><br><span class="line">    # sql_field_str2wordcount   = title</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取后查询，在sql_query执行后立即操作。</span></span><br><span class="line">    <span class="comment">// 它和sql_query_post_index的区别就是执行时间不同</span></span><br><span class="line">    <span class="comment">// sql_query_post是在sql_query执行后执行，而sql_query_post_index是在索引建立完成后才执行。</span></span><br><span class="line">    <span class="comment">// 所以如果要记录最后索引执行时间，那么应该在sql_query_post_index中执行。</span></span><br><span class="line">    # sql_query_post        =</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 参考sql_query_post的说明。</span></span><br><span class="line">    # sql_query_post_index  = REPLACE INTO counters ( id, val ) \</span><br><span class="line">    #   VALUES ( <span class="string">'max_indexed_id'</span>, $maxid )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 命令行获取信息查询。</span></span><br><span class="line">    <span class="comment">// 什么意思呢？</span></span><br><span class="line">    <span class="comment">// 我们进行索引一般只会返回主键id，而不会返回表中的所有字段。</span></span><br><span class="line">    <span class="comment">// 但是在调试的时候，我们一般需要返回表中的字段，那这个时候，就需要使用sql_query_info。</span></span><br><span class="line">    <span class="comment">// 同时这个字段只在控制台有效，在api中是无效的。</span></span><br><span class="line">    sql_query_info      = SELECT * FROM documents WHERE id=$id</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 比如有两个索引，一个索引比较旧，一个索引比较新，那么旧索引中就会有数据是旧的。</span></span><br><span class="line">    <span class="comment">// 当我要对两个索引进行搜索的时候，哪些数据要按照新的索引来进行查询呢。</span></span><br><span class="line">    <span class="comment">// 这个时候就使用到了这个字段了。</span></span><br><span class="line">    <span class="comment">// 这里的例子（http://www.coreseek.cn/docs/coreseek_4.1-sphinx_2.0.1-beta.html#conf-sql-query-killlist）给的非常清晰了。</span></span><br><span class="line">    # sql_query_killlist    = SELECT id FROM documents WHERE edited&gt;=@last_reindex</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下面几个压缩解压的配置都是为了一个目的：让索引重建的时候不要影响数据库的性能表现。</span></span><br><span class="line">    <span class="comment">// SQL数据源解压字段设置</span></span><br><span class="line">    # unpack_zlib       = zlib_column</span><br><span class="line">    <span class="comment">// MySQL数据源解压字段设置</span></span><br><span class="line">    # unpack_mysqlcompress  = compressed_column</span><br><span class="line">    # unpack_mysqlcompress  = compressed_column_2</span><br><span class="line">    <span class="comment">// MySQL数据源解压缓冲区设置</span></span><br><span class="line">    # unpack_mysqlcompress_maxsize  = <span class="number">16</span>M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// xmlpipe的数据源就是一个xml文档</span></span><br><span class="line">    # type          = xmlpipe</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取数据源的命令</span></span><br><span class="line">    # xmlpipe_command       = cat /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/test.xml</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字段</span></span><br><span class="line">    # xmlpipe_field     = subject</span><br><span class="line">    # xmlpipe_field     = content</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 属性</span></span><br><span class="line">    # xmlpipe_attr_timestamp    = published</span><br><span class="line">    # xmlpipe_attr_uint = author_id</span><br><span class="line"></span><br><span class="line">    <span class="comment">// UTF-8修复设置</span></span><br><span class="line">    <span class="comment">// 只适用xmlpipe2数据源，数据源中有可能有非utf-8的字符，这个时候解析就有可能出现问题</span></span><br><span class="line">    <span class="comment">// 如果设置了这个字段，非utf-8序列就会全部被替换为空格。</span></span><br><span class="line">    # xmlpipe_fixup_utf8    = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// sphinx的source是有继承这么一种属性的，意思就是除了父source之外，这个source还有这个特性</span></span><br><span class="line">source src1throttled : src1</span><br><span class="line">&#123;</span><br><span class="line">    sql_ranged_throttle = <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 索引test1</span></span><br><span class="line">index test1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 索引类型，包括有plain，distributed和rt。分别是普通索引/分布式索引/增量索引。默认是plain。</span></span><br><span class="line">    # type          = plain</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 索引数据源</span></span><br><span class="line">    source          = src1</span><br><span class="line">    <span class="comment">// 索引文件存放路径</span></span><br><span class="line">    path            = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/data/test1</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文档信息的存储模式，包括有none,extern,inline。默认是extern。</span></span><br><span class="line">    <span class="comment">// docinfo指的就是数据的所有属性（field）构成的一个集合。</span></span><br><span class="line">    <span class="comment">// 首先文档id是存储在一个文件中的（spa）</span></span><br><span class="line">    <span class="comment">// 当使用inline的时候，文档的属性和文件的id都是存放在spa中的，所以进行查询过滤的时候，不需要进行额外操作。</span></span><br><span class="line">    <span class="comment">// 当使用extern的时候，文档的属性是存放在另外一个文件（spd）中的，但是当启动searchd的时候，会把这个文件加载到内存中。</span></span><br><span class="line">    <span class="comment">// extern就意味着每次做查询过滤的时候，除了查找文档id之外，还需要去内存中根据属性进行过滤。</span></span><br><span class="line">    <span class="comment">// 但是即使这样，extern由于文件大小小，效率也不低。所以不是有特殊要求，一般都是使用extern</span></span><br><span class="line">    docinfo         = extern</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓冲内存锁定。</span></span><br><span class="line">    <span class="comment">// searchd会讲spa和spi预读取到内存中。但是如果这部分内存数据长时间没有访问，则它会被交换到磁盘上。</span></span><br><span class="line">    <span class="comment">// 设置了mlock就不会出现这个问题，这部分数据会一直存放在内存中的。</span></span><br><span class="line">    mlock           = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 词形处理器</span></span><br><span class="line">    <span class="comment">// 词形处理是什么意思呢？比如在英语中，dogs是dog的复数，所以dog是dogs的词干，这两个实际上是同一个词。</span></span><br><span class="line">    <span class="comment">// 所以英语的词形处理器会讲dogs当做dog来进行处理。</span></span><br><span class="line">    morphology      = none</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 词形处理有的时候会有问题，比如将gps处理成gp，这个设置可以允许根据词的长度来决定是否要使用词形处理器。</span></span><br><span class="line">    # min_stemming_len  = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 词形处理后是否还要检索原词？</span></span><br><span class="line">    # index_exact_words = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 停止词，停止词是不被索引的词。</span></span><br><span class="line">    # stopwords     = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/data/stopwords.txt</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义词形字典</span></span><br><span class="line">    # wordforms     = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/data/wordforms.txt</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 词汇特殊处理。</span></span><br><span class="line">    <span class="comment">// 有的一些特殊词我们希望把它当成另外一个词来处理。比如，c++ =&gt; cplusplus来处理。</span></span><br><span class="line">    # exceptions        = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/data/exceptions.txt</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最小索引词长度，小于这个长度的词不会被索引。</span></span><br><span class="line">    min_word_len        = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符集编码类型，可以为sbcs,utf-8。对于Coreseek，还可以有zh_cn.utf-8,zh_ch.gbk,zh_ch.big5</span></span><br><span class="line">    charset_type        = sbcs</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符表和大小写转换规则。对于Coreseek，这个字段无效。</span></span><br><span class="line">    # <span class="string">'sbcs'</span> default value is</span><br><span class="line">    # charset_table     = <span class="number">0.</span><span class="number">.9</span>, A..Z-&gt;a..z, _, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF</span><br><span class="line">    #</span><br><span class="line">    # <span class="string">'utf-8'</span> default value is</span><br><span class="line">    # charset_table     = <span class="number">0.</span><span class="number">.9</span>, A..Z-&gt;a..z, _, a..z, U+<span class="number">410.</span>.U+<span class="number">42</span>F-&gt;U+<span class="number">430.</span>.U+<span class="number">44</span>F, U+<span class="number">430.</span>.U+<span class="number">44</span>F</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 忽略字符表。在忽略字符表中的前后词会被连起来当做一个单独关键词处理。</span></span><br><span class="line">    # ignore_chars      = U+<span class="number">00</span>AD</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否启用通配符，默认为0，不启用</span></span><br><span class="line">    # enable_star       = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// min_prefix_len,min_infix_len,prefix_fields,infix_fields都是在enable_star开启的时候才有效果。</span></span><br><span class="line">    <span class="comment">// 最小前缀索引长度</span></span><br><span class="line">    <span class="comment">// 为什么要有这个配置项呢？</span></span><br><span class="line">    <span class="comment">// 首先这个是当启用通配符配置启用的前提下说的，前缀索引使得一个关键词产生了多个索引项，导致索引文件体积和搜索时间增加巨大。</span></span><br><span class="line">    <span class="comment">// 那么我们就有必要限制下前缀索引的前缀长度，比如example，当前缀索引长度设置为5的时候，它只会分解为exampl，example了。</span></span><br><span class="line">    # min_prefix_len        = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 最小索引中缀长度。理解同上。</span></span><br><span class="line">    # min_infix_len     = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前缀索引和中缀索引字段列表。并不是所有的字段都需要进行前缀和中缀索引。</span></span><br><span class="line">    # prefix_fields     = filename</span><br><span class="line">    # infix_fields      = url, domain</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 词汇展开</span></span><br><span class="line">    <span class="comment">// 是否尽可能展开关键字的精确格式或者型号形式</span></span><br><span class="line">    # expand_keywords       = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// N-Gram索引的分词技术</span></span><br><span class="line">    <span class="comment">// N-Gram是指不按照词典，而是按照字长来分词，这个主要是针对非英文体系的一些语言来做的（中文、韩文、日文）</span></span><br><span class="line">    <span class="comment">// 对coreseek来说，这两个配置项可以忽略。</span></span><br><span class="line">    # ngram_len     = <span class="number">1</span></span><br><span class="line">    # ngram_chars       = U+<span class="number">3000.</span>.U+<span class="number">2</span>FA1F</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 词组边界符列表和步长</span></span><br><span class="line">    <span class="comment">// 哪些字符被看做分隔不同词组的边界。</span></span><br><span class="line">    # phrase_boundary       = ., ?, !, U+<span class="number">2026</span> # horizontal ellipsis</span><br><span class="line">    # phrase_boundary_step  = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 混合字符列表</span></span><br><span class="line">    # blend_chars       = +, &amp;, U+<span class="number">23</span></span><br><span class="line">    # blend_mode        = trim_tail, skip_pure</span><br><span class="line"></span><br><span class="line">    <span class="comment">// html标记清理，是否从输出全文数据中去除HTML标记。</span></span><br><span class="line">    html_strip      = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// HTML标记属性索引设置。</span></span><br><span class="line">    # html_index_attrs  = img=alt,title; a=title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 需要清理的html元素</span></span><br><span class="line">    # html_remove_elements  = style, script</span><br><span class="line"></span><br><span class="line">    <span class="comment">// searchd是预先打开全部索引还是每次查询再打开索引。</span></span><br><span class="line">    # preopen           = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字典文件是保持在磁盘上还是将他预先缓冲在内存中。</span></span><br><span class="line">    # ondisk_dict       = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于在索引建立的时候，需要建立临时文件和和副本，还有旧的索引</span></span><br><span class="line">    <span class="comment">// 这个时候磁盘使用量会暴增，于是有个方法是临时文件重复利用</span></span><br><span class="line">    <span class="comment">// 这个配置会极大减少建立索引时候的磁盘压力，代价是索引建立速度变慢。</span></span><br><span class="line">    # inplace_enable        = <span class="number">1</span></span><br><span class="line">    # inplace_hit_gap       = <span class="number">0</span> # preallocated hitlist gap size</span><br><span class="line">    # inplace_docinfo_gap   = <span class="number">0</span> # preallocated docinfo gap size</span><br><span class="line">    # inplace_reloc_factor  = <span class="number">0.1</span> # relocation buffer size within arena</span><br><span class="line">    # inplace_write_factor  = <span class="number">0.1</span> # write buffer size within arena</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在经过过短的位置后增加位置值</span></span><br><span class="line">    # overshort_step        = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在经过 停用词 处后增加位置值</span></span><br><span class="line">    # stopword_step     = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 位置忽略词汇列表</span></span><br><span class="line">    # hitless_words     = all</span><br><span class="line">    # hitless_words     = hitless.txt</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否检测并索引句子和段落边界</span></span><br><span class="line">    # index_sp          = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字段内需要索引的HTML/XML区域的标签列表</span></span><br><span class="line">    # index_zones       = title, h*, th</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">index test1stemmed : test1</span><br><span class="line">&#123;</span><br><span class="line">    path            = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/data/test1stemmed</span><br><span class="line">    morphology      = stem_en</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">index dist1</span><br><span class="line">&#123;</span><br><span class="line">    type            = distributed</span><br><span class="line"></span><br><span class="line">    local           = test1</span><br><span class="line">    local           = test1stemmed</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分布式索引（distributed index）中的远程代理和索引声明</span></span><br><span class="line">    agent           = localhost:<span class="number">9313</span>:remote1</span><br><span class="line">    agent           = localhost:<span class="number">9314</span>:remote2,remote3</span><br><span class="line">    # agent         = /var/run/searchd.sock:remote4</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分布式索引（ distributed index）中声明远程黑洞代理</span></span><br><span class="line">    # agent_blackhole       = testbox:<span class="number">9312</span>:testindex1,testindex2</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 远程代理的连接超时时间</span></span><br><span class="line">    agent_connect_timeout   = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 远程查询超时时间</span></span><br><span class="line">    agent_query_timeout = <span class="number">3000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">index rt</span><br><span class="line">&#123;</span><br><span class="line">    type            = rt</span><br><span class="line"></span><br><span class="line">    path            = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/data/rt</span><br><span class="line"></span><br><span class="line">    <span class="comment">// RT索引内存限制</span></span><br><span class="line">    # rt_mem_limit      = <span class="number">512</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全文字段定义</span></span><br><span class="line">    rt_field        = title</span><br><span class="line">    rt_field        = content</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无符号整数属性定义</span></span><br><span class="line">    rt_attr_uint        = gid</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 各种属性定义</span></span><br><span class="line">    # rt_attr_bigint        = guid</span><br><span class="line">    # rt_attr_float     = gpa</span><br><span class="line">    # rt_attr_timestamp = ts_added</span><br><span class="line">    # rt_attr_string        = author</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">indexer</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 建立索引的时候，索引内存限制</span></span><br><span class="line">    mem_limit       = <span class="number">32</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每秒最大I/O操作次数，用于限制I/O操作</span></span><br><span class="line">    # max_iops      = <span class="number">40</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最大允许的I/O操作大小，以字节为单位，用于I/O节流</span></span><br><span class="line">    # max_iosize        = <span class="number">1048576</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对于XMLLpipe2数据源允许的最大的字段大小，以字节为单位</span></span><br><span class="line">    # max_xmlpipe2_field    = <span class="number">4</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 写缓冲区的大小，单位是字节</span></span><br><span class="line">    # write_buffer      = <span class="number">1</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文件字段可用的最大缓冲区大小，字节为单位</span></span><br><span class="line">    # max_file_field_buffer = <span class="number">32</span>M</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索服务配置</span></span><br><span class="line">searchd</span><br><span class="line">&#123;</span><br><span class="line">    # listen            = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    # listen            = <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">9312</span></span><br><span class="line">    # listen            = <span class="number">9312</span></span><br><span class="line">    # listen            = /var/run/searchd.sock</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听端口</span></span><br><span class="line">    listen          = <span class="number">9312</span></span><br><span class="line">    listen          = <span class="number">9306</span>:mysql41</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听日志</span></span><br><span class="line">    log         = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/log/searchd.log</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询日志</span></span><br><span class="line">    query_log       = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/log/query.log</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 客户端读超时时间 </span></span><br><span class="line">    read_timeout        = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 客户端持久连接超时时间，即客户端读一次以后，持久连接，然后再读一次。中间这个持久连接的时间。</span></span><br><span class="line">    client_timeout      = <span class="number">300</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 并行执行搜索的数目</span></span><br><span class="line">    max_children        = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进程id文件</span></span><br><span class="line">    pid_file        = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/log/searchd.pid</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 守护进程在内存中为每个索引所保持并返回给客户端的匹配数目的最大值</span></span><br><span class="line">    max_matches     = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无缝轮转。防止 searchd 轮换在需要预取大量数据的索引时停止响应</span></span><br><span class="line">    <span class="comment">// 当进行索引轮换的时候，可能需要消耗大量的时间在轮换索引上。</span></span><br><span class="line">    <span class="comment">// 但是启动了无缝轮转，就以消耗内存为代价减少轮转的时间</span></span><br><span class="line">    seamless_rotate     = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 索引预开启，是否强制重新打开所有索引文件</span></span><br><span class="line">    preopen_indexes     = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 索引轮换成功之后，是否删除以.old为扩展名的索引拷贝</span></span><br><span class="line">    unlink_old      = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 属性刷新周期</span></span><br><span class="line">    <span class="comment">// 就是使用UpdateAttributes()更新的文档属性每隔多少时间写回到磁盘中。</span></span><br><span class="line">    # attr_flush_period = <span class="number">900</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 索引字典存储方式</span></span><br><span class="line">    # ondisk_dict_default   = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于多值属性MVA更新的存储空间的内存共享池大小</span></span><br><span class="line">    mva_updates_pool    = <span class="number">1</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 网络通讯时允许的最大的包的大小</span></span><br><span class="line">    max_packet_size     = <span class="number">8</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 崩溃日志文件</span></span><br><span class="line">    # crash_log_path        = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/log/crash</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每次查询允许设置的过滤器的最大个数</span></span><br><span class="line">    max_filters     = <span class="number">256</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 单个过滤器允许的值的最大个数</span></span><br><span class="line">    max_filter_values   = <span class="number">4096</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// TCP监听待处理队列长度</span></span><br><span class="line">    # listen_backlog        = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每个关键字的读缓冲区的大小</span></span><br><span class="line">    # read_buffer       = <span class="number">256</span>K</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无匹配时读操作的大小</span></span><br><span class="line">    # read_unhinted     = <span class="number">32</span>K</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每次批量查询的查询数限制</span></span><br><span class="line">    max_batch_queries   = <span class="number">32</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每个查询的公共子树文档缓存大小</span></span><br><span class="line">    # subtree_docs_cache    = <span class="number">4</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每个查询的公共子树命中缓存大小</span></span><br><span class="line">    # subtree_hits_cache    = <span class="number">8</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多处理模式（MPM）。 可选项；可用值为none、fork、prefork，以及threads。 默认在Unix类系统为form，Windows系统为threads。</span></span><br><span class="line">    workers         = threads # for RT to work</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 并发查询线程数</span></span><br><span class="line">    # dist_threads      = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二进制日志路径</span></span><br><span class="line">    # binlog_path       = # disable logging</span><br><span class="line">    # binlog_path       = /home/yejianfeng/<span class="keyword">instance</span>/coreseek/var/data # binlog<span class="number">.001</span> etc will be created there</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二进制日志刷新</span></span><br><span class="line">    # binlog_flush      = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二进制日志大小限制</span></span><br><span class="line">    # binlog_max_log_size   = <span class="number">256</span>M</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线程堆栈</span></span><br><span class="line">    # thread_stack          = <span class="number">128</span>K</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关键字展开限制</span></span><br><span class="line">    # expansion_limit       = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// RT索引刷新周期 </span></span><br><span class="line">    # rt_flush_period       = <span class="number">900</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询日志格式</span></span><br><span class="line">    <span class="comment">// 可选项，可用值为plain、sphinxql，默认为plain。 </span></span><br><span class="line">    # query_log_format      = sphinxql</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MySQL版本设置</span></span><br><span class="line">    # mysql_version_string  = <span class="number">5.0</span><span class="number">.37</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插件目录</span></span><br><span class="line">    # plugin_dir            = /usr/local/sphinx/lib</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 服务端默认字符集</span></span><br><span class="line">    # collation_server      = utf8_general_ci</span><br><span class="line">    <span class="comment">// 服务端libc字符集</span></span><br><span class="line">    # collation_libc_locale = ru_RU.UTF<span class="number">-8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线程服务看守</span></span><br><span class="line">    # watchdog              = <span class="number">1</span></span><br><span class="line">    <span class="comment">// 兼容模式</span></span><br><span class="line">    # compat_sphinxql_magics    = <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br><br> </p><h5 id="转载自-轩脉刃de刀光剑影"><a href="#转载自-轩脉刃de刀光剑影" class="headerlink" title="转载自:  轩脉刃de刀光剑影"></a>转载自:  <a href="http://www.cnblogs.com/yjf512/p/3598332.html" target="_blank" rel="noopener">轩脉刃de刀光剑影</a></h5>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;source&lt;/strong&gt;：数据源，数据是从什么地方来的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;：索引，当有数据源之后，从数据源处构建索引。索引实际上就是相当于一个字典检索。有了整本字典内容以后，才会有字典检索。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;searchd&lt;/strong&gt;：提供搜索查询服务。它一般是以deamon的形式运行在后台的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;indexer&lt;/strong&gt;：构建索引的服务。当要重新构建索引的时候，就是调用indexer这个命令。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="Sphinx" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Sphinx/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/tags/PHP/"/>
    
      <category term="Sphinx" scheme="http://www.pulsating.cn/tags/Sphinx/"/>
    
  </entry>
  
  <entry>
    <title>从0到1,Sphinx Windows本地安装及PHP使用Sphinxapi示例</title>
    <link href="http://www.pulsating.cn/2019/11/12/%E4%BB%8E0%E5%88%B01-Sphinx-Windows%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%E5%8F%8APHP%E4%BD%BF%E7%94%A8Sphinxapi%E7%A4%BA%E4%BE%8B/"/>
    <id>http://www.pulsating.cn/2019/11/12/%E4%BB%8E0%E5%88%B01-Sphinx-Windows%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%E5%8F%8APHP%E4%BD%BF%E7%94%A8Sphinxapi%E7%A4%BA%E4%BE%8B/</id>
    <published>2019-11-12T15:01:44.000Z</published>
    <updated>2019-11-12T16:06:59.784Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;最近一个项目需要实现这样一个需求:mysql数据库一张表中存了百万张菜品图片,需要根据菜品名称或描述,模糊匹配出符合条件的菜品图片,并展示出来</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="built_in">table_name</span> <span class="keyword">where</span> <span class="keyword">column</span> <span class="keyword">like</span> <span class="string">'%鱼香肉丝%'</span>;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如果像上面那样,直接使用mysql like查询的话,会进行全表扫描,不走索引,大大的影响查询效率,所以开始学习使用<strong>Sphinx全文搜索引擎</strong>,下面记录下第一次配置使用的过程,以及过程中遇到的问题和疑问,望指正.</p><a id="more"></a><h6 id="1-下载sphinx源码压缩包点击下载"><a href="#1-下载sphinx源码压缩包点击下载" class="headerlink" title="1. 下载sphinx源码压缩包点击下载"></a>1. 下载sphinx源码压缩包<a href="http://sphinxsearch.com/downloads/current/" target="_blank" rel="noopener">点击下载</a></h6><p>按照自己的需求,下载对应的版本,我这里下载的是Windows x64 binaries 3.1.1 版本</p><h6 id="2-下载后的sphinx源码目录"><a href="#2-下载后的sphinx源码目录" class="headerlink" title="2. 下载后的sphinx源码目录"></a>2. 下载后的sphinx源码目录</h6><p><img src="https://upload-images.jianshu.io/upload_images/14618365-57bc4bf34fe6ce13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sphinx源码目录结构"></p><h6 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h6><p>打开etc目录,里面有三个文件,example,sql是创建测试表的脚本,我们稍后会用到,sphinx.conf.dist是完整版默认配置,这里我选择了sphinx-min.conf.dist简化版,暂时可以满足需求,复制一份到bin目录下,并且重命名为sphinx.conf.<br><img src="https://upload-images.jianshu.io/upload_images/14618365-eeada956c4180e1c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="etc目录"></p><h6 id="4-sphinx-config文件配置"><a href="#4-sphinx-config文件配置" class="headerlink" title="4. sphinx.config文件配置"></a>4. sphinx.config文件配置</h6><p>配置文件的几个组成部分:</p><ul><li>source 数据源,这里配置你要进行全文检索的数据的来源</li><li>index 索引,从上面的数据源处构建索引,相当于字典检索,要有整本字典内容后才会有索引</li><li>indexer 构建索引,需要重新构建索引时,其实就是调用indexer这个命令</li><li>searchd 提供搜索查询的服务,后台运行<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">source src1 ## src1为数据源命名的名称,可以根据数据源的属性更改</span><br><span class="line">&#123;</span><br><span class="line">    type            = mysql ## 数据源,本项目使用mysql</span><br><span class="line">    sql_host        = localhost ## 数据库服务器,这里因为是测试,使用的是本地数据库</span><br><span class="line">    sql_user        = root # 数据库用户名</span><br><span class="line">    sql_pass        = root # 数据库密码</span><br><span class="line">    sql_db          = hongbao ## 数据库名称,替换成你自己的数据库名称</span><br><span class="line">    sql_port        = <span class="number">3306</span> ## 数据库端口,默认<span class="number">3306</span></span><br><span class="line">    sql_query_pre   = SET NAMES utf8 ## 如果你的数据库不是uft8编码的,注释掉本行</span><br><span class="line">    sql_query       = \ ## 主查询,查询出所有在检索范围的数据</span><br><span class="line">        SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content \</span><br><span class="line">        FROM documents</span><br><span class="line">    sql_attr_uint       = group_id ## 属性</span><br><span class="line">    sql_attr_timestamp  = date_added ## 属性,可用来排序</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">index test1 ## 索引名称,自行命名</span><br><span class="line">&#123;</span><br><span class="line">    source          = src1 ## 基于这个数据源构建索引</span><br><span class="line">    path            = D:/sphinx/data/ ## 存放索引的目录,自己创建</span><br><span class="line">    charset_table = <span class="number">0.</span><span class="number">.9</span>, A..Z-&gt;a..z, _, a..z, U+<span class="number">410.</span>.U+<span class="number">42</span>F-&gt;U+<span class="number">430.</span>.U+<span class="number">44</span>F, U+<span class="number">430.</span>.U+<span class="number">44</span>F  ##  指定utf<span class="number">-8</span>的编码表</span><br><span class="line">    mlock           = <span class="number">0</span></span><br><span class="line">    morphology      = none ## 词形处理器,如果检索中文用不到,dogs&lt;==&gt;dog</span><br><span class="line">    min_word_len        = <span class="number">1</span> ## 最小索引词长度,小于这个长度的词不会被索引</span><br><span class="line">    ngram_len       = <span class="number">1</span> ## 简单分词,只支持<span class="number">0</span>和<span class="number">1</span>,如果要搜索中文,请指定为<span class="number">1</span></span><br><span class="line">    ngram_chars     = U+<span class="number">3000.</span>.U+<span class="number">2</span>FA1F ## 需要分词的字符,如果要搜索中文,请放开这行</span><br><span class="line">    html_strip      = <span class="number">0</span> ## html标记清理,是否从输出全文数据中去除HTML标记</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">indexer</span><br><span class="line">&#123;</span><br><span class="line">    # memory limit, <span class="keyword">in</span> bytes, kiloytes (<span class="number">16384</span>K) or megabytes (<span class="number">256</span>M)</span><br><span class="line">    # optional, default is <span class="number">128</span>M, max is <span class="number">2047</span>M, recommended is <span class="number">256</span>M to <span class="number">1024</span>M</span><br><span class="line">    mem_limit       = <span class="number">128</span>M ## 建立索引的时候,索引内存限制</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">searchd</span><br><span class="line">&#123;</span><br><span class="line">    listen          = <span class="number">9312</span> ## 监听端口</span><br><span class="line">    listen          = <span class="number">9306</span>:mysql41</span><br><span class="line"></span><br><span class="line">    log         = D:/sphinx/log/searchd.log ## 监听日志</span><br><span class="line">    query_log       = D:/sphinx/log/query.log ## 查询日志</span><br><span class="line">    pid_file        = D:/sphinx/log/searchd.pid ## ## 进程id文件</span><br><span class="line">    read_timeout        = <span class="number">5</span> ## 客户端读超时时间</span><br><span class="line">    client_timeout      = <span class="number">300</span> ## 客户端持久连接超时时间,即客户端读一次以后,持久连接,然后再读一次,中间这个持久连接的时间</span><br><span class="line">    max_children        = <span class="number">30</span> ## 并行执行搜索的数目</span><br><span class="line">    persistent_connections_limit    = <span class="number">30</span></span><br><span class="line">    preopen_indexes     = <span class="number">1</span> ## 索引预开启，是否强制重新打开所有索引文件</span><br><span class="line">    unlink_old      = <span class="number">1</span> ## 索引轮换成功之后，是否删除以.old为扩展名的索引拷贝</span><br><span class="line">    max_packet_size     = <span class="number">8</span>M ## 网络通讯时允许的最大的包的大小</span><br><span class="line">    max_filters     = <span class="number">256</span> ## 每次查询允许设置的过滤器的最大个数</span><br><span class="line">    max_filter_values   = <span class="number">4096</span> ## 单个过滤器允许的值的最大个数</span><br><span class="line">    max_batch_queries   = <span class="number">32</span> ## 每次批量查询的查询数限制</span><br><span class="line">    workers         = threads # for RT to work     多处理模式（MPM）。 可选项；可用值为none、fork、prefork，以及threads。 默认在Unix类系统为form，Windows系统为threads。</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>__注:配置文件更改完成之后,回到根目录新建配置文件中使用到的data和log两个目录__</li></ul><p>导入源码里提供的示例数据,执行etc目录下的example.sql脚本:<br><img src="https://upload-images.jianshu.io/upload_images/14618365-f72b58fee6c8b94f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="导入测试数据"></p><p>或者使用mysql图形处理界面工具:<br><img src="https://upload-images.jianshu.io/upload_images/14618365-5e7913e3b77827cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="导入测试数据.png"></p><h6 id="5-根据sphinx-conf创建索引"><a href="#5-根据sphinx-conf创建索引" class="headerlink" title="5. 根据sphinx.conf创建索引"></a>5. 根据sphinx.conf创建索引</h6><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 构建索引语法:</span><br><span class="line">indexer -c 配置文件 索引名字</span><br></pre></td></tr></table></figure><ul><li>打开windows 命令提示行工具,进入到sphinx/bin目录下</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/14618365-b051e3066904d801.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="根据sphinx.conf创建索引"></p><ul><li>启动sphinx检索服务,后台常驻</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/14618365-4f8b1e2d6cc27b6a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="启动"></p><ul><li>查看索引创建情况<br>重新打开一个命令行窗口,</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/14618365-71ee147c00cedb1b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="索引建立情况"></p><h6 id="6-Sphinxapi-php使用-或者安装php扩展"><a href="#6-Sphinxapi-php使用-或者安装php扩展" class="headerlink" title="6. Sphinxapi.php使用(或者安装php扩展)"></a>6. Sphinxapi.php使用(或者安装php扩展)</h6><p>sphinx提供了各种语言的代码,php使用sphinx,只需要引入sphinxapi.php,打开根目录下的api目录,将sphinxapi.php文件复制到你的项目目录下,方便调用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line">/**</span><br><span class="line"> * Demo.php</span><br><span class="line"> * Create on 2018/8/29 10:42</span><br><span class="line"> * Create by liu</span><br><span class="line"> * Administrator</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">extends</span> <span class="title">CI_Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $sphinx;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">parent</span>::__construct();</span></span><br><span class="line"><span class="php">        <span class="keyword">require_once</span> APPPATH . <span class="string">'libraries/Sphinxapi.php'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sphinx = <span class="keyword">new</span> SphinxClient();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sphinx</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">//设置操作哪个sphinx服务器</span></span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sphinx-&gt;setServer(<span class="string">'localhost'</span>,<span class="number">9312</span>);</span></span><br><span class="line"><span class="php">        $keyword = <span class="string">"银行"</span>;<span class="comment">//要搜索的关键字</span></span></span><br><span class="line"><span class="php">        $index = <span class="string">'bank'</span>;<span class="comment">//索引名称</span></span></span><br><span class="line"><span class="php">        <span class="comment">//查询出关键字所在的主键id</span></span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sphinx-&gt;_limit = <span class="number">2000</span>;</span></span><br><span class="line"><span class="php">        $res = <span class="keyword">$this</span>-&gt;sphinx-&gt;Query($keyword,$index);</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">isset</span>($res[<span class="string">'matches'</span>]))&#123;</span></span><br><span class="line"><span class="php">            $ids = array_keys($res[<span class="string">'matches'</span>]);</span></span><br><span class="line"><span class="php">            $ids = implode(<span class="string">','</span>,$ids);</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            print_r(<span class="string">"内容不存在"</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="comment">//获取匹配到的主键id</span></span></span><br><span class="line"><span class="php">        $mysql_con = mysqli_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>,<span class="string">'hongbao'</span>);<span class="comment">//本地数据库</span></span></span><br><span class="line"><span class="php">        mysqli_query($mysql_con,<span class="string">'set name utf8'</span>);</span></span><br><span class="line"><span class="php">        mysqli_query($mysql_con,<span class="string">'use hongbao'</span>);</span></span><br><span class="line"><span class="php">        $sql = <span class="string">"select * from bank where id in ($ids)"</span>;</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">        $res = mysqli_query($mysql_con,$sql);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">while</span> ($row = mysqli_fetch_assoc($res))&#123;</span></span><br><span class="line"><span class="php">            $data[] = $row;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">foreach</span> ($data <span class="keyword">as</span> $key =&gt; $v)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">            $v = str_replace($keyword,<span class="string">"&lt;font color='red'&gt;&#123;$keyword&#125;&lt;/font&gt;"</span>,$v);</span></span><br><span class="line"><span class="php">            $data[$key] = $v;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        print_r($data);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>代码运行结果<br><img src="https://upload-images.jianshu.io/upload_images/14618365-4ce186161f4e1689.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="代码运行结果"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;最近一个项目需要实现这样一个需求:mysql数据库一张表中存了百万张菜品图片,需要根据菜品名称或描述,模糊匹配出符合条件的菜品图片,并展示出来&lt;/p&gt;
&lt;figure class=&quot;highlight pgsql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;%鱼香肉丝%&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;如果像上面那样,直接使用mysql like查询的话,会进行全表扫描,不走索引,大大的影响查询效率,所以开始学习使用&lt;strong&gt;Sphinx全文搜索引擎&lt;/strong&gt;,下面记录下第一次配置使用的过程,以及过程中遇到的问题和疑问,望指正.&lt;/p&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/"/>
    
      <category term="Sphinx" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Sphinx/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/tags/PHP/"/>
    
      <category term="Sphinx" scheme="http://www.pulsating.cn/tags/Sphinx/"/>
    
      <category term="Sphinxapi" scheme="http://www.pulsating.cn/tags/Sphinxapi/"/>
    
  </entry>
  
  <entry>
    <title>Windows+PHP5.6环境下安装imagick扩展和imagemagick</title>
    <link href="http://www.pulsating.cn/2019/11/12/Windows-PHP5-6%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85imagick%E6%89%A9%E5%B1%95%E5%92%8Cimagemagick/"/>
    <id>http://www.pulsating.cn/2019/11/12/Windows-PHP5-6%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85imagick%E6%89%A9%E5%B1%95%E5%92%8Cimagemagick/</id>
    <published>2019-11-12T14:40:35.000Z</published>
    <updated>2019-11-12T15:41:49.064Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>其实回过头看,安装过程中最容易出错的反而是下载阶段,一定要将imagemagick和imagick的版本和<code>phpinfo</code>的信息对应好!<br>下图中几点需要注意,每个人的信息可能不同,根据你自己的phpinfo来选择接下来的下载的程序及扩展版本:</p></blockquote><ul><li>PHP Version: <strong>PHP版本</strong> </li><li>compiler: <strong>MSVC11</strong></li><li>Architecture: <strong>x86</strong></li><li>Thread Safety: <strong>disabled</strong> 非线程安全,也就是<strong>NTS</strong>,相反的则是线程安全<strong>TS</strong></li></ul><a id="more"></a><p><img src="https://upload-images.jianshu.io/upload_images/14618365-bc2658ebe00f81fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>正文部分</strong></p><hr><h4 id="一-Imagemagick部分"><a href="#一-Imagemagick部分" class="headerlink" title="一. Imagemagick部分"></a>一. Imagemagick部分</h4><h5 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h5><ul><li>下载<code>Imagemagick</code>程序<br>下载地址:<a href="http://windows.php.net/downloads/pecl/deps/" target="_blank" rel="noopener">Imagemagick程序下载地址</a><br>打开链接,找到Imagemagick的下载区域,根据phpinfo我应该选择vc11,32位的下载链接,也就是下图中圈出的部分<br><img src="https://upload-images.jianshu.io/upload_images/14618365-1fa2dc2e9309896b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><h5 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h5><ul><li><p><strong>解压缩</strong> 将下载后的压缩包,直接解压到你想放置的目录下,不要有中文和特殊字符,我把它放在了<code>D:\install_dir\imagemagick</code>下,并且记住不要忘记这个路径</p></li><li><p><strong>环境变量配置</strong> 为了更方便,全局都可以使用,我们需要配置下环境变量,进入刚才解压缩的目录,再进入/bin目录下,复制当前路径,我的路径为<code>D:\install_dir\imagemagick\bin</code>,右击我的电脑(计算机),按照下图依次打开环境变量配置位置,将路径粘贴进去(<strong>注意:Path中可能有多个路径,多个路径间用<code>;</code>分号分割就好</strong>)<br><img src="https://upload-images.jianshu.io/upload_images/14618365-b9d3e46e19449641.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p><strong>导入DLL文件</strong> 进入<code>imagemagick</code>的<code>bin</code>目录下,复制所有<code>.dll</code>后缀的文件到你的<code>php</code>根目录下(我使用的是Phpstudy建的环境,我的<code>php</code>路径为:<code>D:\phpStudy\php\php-5.6.27-nts</code>)我的版本有147个文件,这里有个小技巧,在文件管理器右上角搜索<code>.dll</code>,然后全选复制,会方便一点<br><img src="https://upload-images.jianshu.io/upload_images/14618365-845b64c7cb6228f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li></ul><h4 id="二-Imagick扩展部分"><a href="#二-Imagick扩展部分" class="headerlink" title="二. Imagick扩展部分"></a>二. Imagick扩展部分</h4><p>&emsp;&emsp;首先<code>imagick</code>一个<code>php</code>扩展,可以使用<code>php</code>控制<code>imagemagick</code>程序</p><h5 id="1-下载-1"><a href="#1-下载-1" class="headerlink" title="1. 下载"></a>1. 下载</h5><ul><li><strong>下载imagick</strong> <a href="https://windows.php.net/downloads/pecl/releases/imagick/" target="_blank" rel="noopener">下载地址</a> 仍然是根据你的phpinfo选择对应的版本,根据文章开始的图片,我应该选择<a href="https://windows.php.net/downloads/pecl/releases/imagick/3.4.3/php_imagick-3.4.3-5.6-ts-vc11-x86.zip" target="_blank" rel="noopener">php_imagick-3.4.3-5.6-ts-vc11-x86.zip</a></li></ul><p>#####2. 安装</p><ul><li><strong>php_imagick.dll</strong> 找到刚下载的压缩包,解压后,找到<code>php_imagick.dll</code>文件,将其复制粘贴到<code>php</code>根目录下的<code>ext</code>目录下</li><li><strong>其他<code>.DLL</code>文件</strong> 将解压后的<code>imagick</code>目录下的其他<code>.dll</code>后缀的文件全部复制粘贴到<code>php</code>根目录下</li><li><strong>php.ini</strong> 找到php.ini文件并打开编辑,加入<code>extension=php_imagick.dll</code>这一行</li></ul><h4 id="三-重启"><a href="#三-重启" class="headerlink" title="三. 重启"></a>三. 重启</h4><p>到这里基本上可以成功安装了,<code>imagemagick</code>需要重启电脑后才会生效,重启电脑后,查看phpinfo,如果成功安装了,会看到下图中的部分<br><img src="https://upload-images.jianshu.io/upload_images/14618365-e71f02e2d9ef466b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;其实回过头看,安装过程中最容易出错的反而是下载阶段,一定要将imagemagick和imagick的版本和&lt;code&gt;phpinfo&lt;/code&gt;的信息对应好!&lt;br&gt;下图中几点需要注意,每个人的信息可能不同,根据你自己的phpinfo来选择接下来的下载的程序及扩展版本:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;PHP Version: &lt;strong&gt;PHP版本&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;compiler: &lt;strong&gt;MSVC11&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Architecture: &lt;strong&gt;x86&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Thread Safety: &lt;strong&gt;disabled&lt;/strong&gt; 非线程安全,也就是&lt;strong&gt;NTS&lt;/strong&gt;,相反的则是线程安全&lt;strong&gt;TS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/PHP/"/>
    
      <category term="图像处理" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="PHP" scheme="http://www.pulsating.cn/tags/PHP/"/>
    
      <category term="imagick" scheme="http://www.pulsating.cn/tags/imagick/"/>
    
      <category term="Imagemagick" scheme="http://www.pulsating.cn/tags/Imagemagick/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Review 之引擎</title>
    <link href="http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%BC%95%E6%93%8E/"/>
    <id>http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%BC%95%E6%93%8E/</id>
    <published>2019-11-12T14:31:31.000Z</published>
    <updated>2019-11-12T15:32:30.595Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. Mysql具有多个引擎,都隐藏在Mysql服务器内,全都可以执行CERATE TABLE 和SELECT等命令</strong><br><strong>2. 不同的引擎有不同的功能和灵活性,下面列出几个必须要知道的引擎:</strong></p><ul><li><strong>InnoDB</strong> 是一个可靠的事务处理引擎,不支持全文本搜索.__</li><li><strong>MEMORY</strong> 功能上等于MyISAM,但由于数据存储在内存(不是磁盘),速度很快,特别适用于临时表.</li><li><strong>MyISAM</strong> 性能极高,支持全文本搜索.但是支持事务处理.</li></ul><p><strong>3. 引擎类型可以混用</strong></p><blockquote><p>注:外键不可以跨引擎,即使用一个引擎的表不能引用具有不用引擎的表的外键,这也是混用引擎的一大缺陷</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1. Mysql具有多个引擎,都隐藏在Mysql服务器内,全都可以执行CERATE TABLE 和SELECT等命令&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2. 不同的引擎有不同的功能和灵活性,下面列出几个必须要知道的引擎:&lt;/strong&gt;&lt;/p&gt;
&lt;u
      
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Mysql%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/tags/Mysql%E5%9F%BA%E7%A1%80/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Review 之表联结入门篇</title>
    <link href="http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E8%A1%A8%E8%81%94%E7%BB%93%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E8%A1%A8%E8%81%94%E7%BB%93%E5%85%A5%E9%97%A8%E7%AF%87/</id>
    <published>2019-11-12T14:30:06.000Z</published>
    <updated>2019-11-12T15:10:58.412Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-为什么要使用联结"><a href="#1-为什么要使用联结" class="headerlink" title="1. 为什么要使用联结?"></a>1. 为什么要使用联结?</h4><pre><code>联结可以利用一条SELECT语句检索出存储在多个关系表上的数据,也就是联结多个表返回一组数据.</code></pre><h4 id="2-一个创建联结的简单例子"><a href="#2-一个创建联结的简单例子" class="headerlink" title="2. 一个创建联结的简单例子"></a>2. 一个创建联结的简单例子</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> vend_name,prod_name,prod_price <span class="comment">//检索出这三列数据</span></span><br><span class="line"><span class="keyword">FROM</span> vendors,products <span class="comment">//从这两个表中</span></span><br><span class="line"><span class="keyword">WHERE</span> vendors.vend_id = product.vend_id <span class="comment">//条件是两个表中的vend_id相等</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> vend_name,prod_name; <span class="comment">//通过vend_name,prod_name排序</span></span><br></pre></td></tr></table></figure><p>创建联结语句时,一定要注意的WHERE子句,如果没有WHERE子句,第一个表中的每一行都i将于第二个表中的行配对,从而产生大量不希望检索出的结果,也就是<strong>笛卡儿积</strong>(没有联结条件的表关系返回的结果)</p><p><strong><em>应该保证所有联结都有WHERE子句,并且保证WHERE子句的正确性</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-为什么要使用联结&quot;&gt;&lt;a href=&quot;#1-为什么要使用联结&quot; class=&quot;headerlink&quot; title=&quot;1. 为什么要使用联结?&quot;&gt;&lt;/a&gt;1. 为什么要使用联结?&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;联结可以利用一条SELECT语句检索出存储在多个关系
      
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Mysql%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/tags/Mysql%E5%9F%BA%E7%A1%80/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Review 之函数篇</title>
    <link href="http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%87%BD%E6%95%B0%E7%AF%87/"/>
    <id>http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%87%BD%E6%95%B0%E7%AF%87/</id>
    <published>2019-11-12T14:24:39.000Z</published>
    <updated>2019-11-12T16:37:27.526Z</updated>
    
    <content type="html"><![CDATA[<h4 id="数据处理函数"><a href="#数据处理函数" class="headerlink" title="数据处理函数"></a>数据处理函数</h4><blockquote><p>Mqsql 和其他大多数计算机语言一样,支持利用函数处理数据,大多数SQL都支持以下类型的函数.</p></blockquote><ul><li><p>处理文本串的文本函数</p></li><li><p>数值数据上进行算术操作的数值函数</p></li><li><p>处理日期和时间值并从这些值中提取特定成分的日期和时间函数</p></li><li><p>返回DBMS正使用的特殊信息的系统函数</p></li></ul><p><strong>1. 文本处理函数</strong><br>常用的文本处理函数一览 </p><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>Left() or Right()</td><td>返回字符串左 or 右边的字符</td><td></td></tr><tr><td>Length()</td><td>返回字符串的长度</td><td></td></tr><tr><td>Locate()</td><td>找出字符串的一个子串</td><td></td></tr><tr><td>Lower() or Upper()</td><td>将字符串转换为小 or 大写</td><td></td></tr><tr><td>LTrim() or RTrim()</td><td>去掉字符串左 or 右边的空格</td><td></td></tr><tr><td>Substring()</td><td>截取字符串的子字符串</td><td></td></tr></tbody></table><p><strong>2. 日期处理函数</strong><br>常用的日期和时间处理函数    </p><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>AddDate() or AddTime()</td><td>增加一个日期 or 时间</td><td></td></tr><tr><td>CurDate() or CurTime()</td><td>返回当前日期 or 时间</td><td></td></tr><tr><td>Date()</td><td>返回日期部分</td><td></td></tr><tr><td>DateDiff()</td><td>计算两个日期之差</td><td></td></tr><tr><td>Date_Format()</td><td>返回一个格式化的日期或时间串</td><td></td></tr><tr><td>DayOfWeek()</td><td>返回一个日期,对应的是星期几</td><td></td></tr></tbody></table><p><strong>3. 数值处理函数</strong><br>常用的数值处理函数</p><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>ABS()</td><td>返回绝对值</td><td></td></tr><tr><td>Mod()</td><td>返回除操作的余数</td><td></td></tr><tr><td>Rand()</td><td>返回一个随机数</td><td></td></tr><tr><td>Sqrt()</td><td>返回一个数的平方根</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;数据处理函数&quot;&gt;&lt;a href=&quot;#数据处理函数&quot; class=&quot;headerlink&quot; title=&quot;数据处理函数&quot;&gt;&lt;/a&gt;数据处理函数&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Mqsql 和其他大多数计算机语言一样,支持利用函数处理数据,大多数SQL都支持以
      
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Mysql%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/tags/Mysql%E5%9F%BA%E7%A1%80/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Review 之常用词汇 术语</title>
    <link href="http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%B8%B8%E7%94%A8%E8%AF%8D%E6%B1%87-%E6%9C%AF%E8%AF%AD/"/>
    <id>http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%B8%B8%E7%94%A8%E8%AF%8D%E6%B1%87-%E6%9C%AF%E8%AF%AD/</id>
    <published>2019-11-12T14:23:09.000Z</published>
    <updated>2019-11-12T15:32:27.611Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. database</strong> 数据库</p><p><strong>2. DBMS</strong> 数据库管理系统</p><p><strong>3. table</strong> 表 (结构化文件,存储某种特定类型的数据)</p><p><strong>4. schema</strong> 模式(包括数据库及表间关系)</p><p><strong>5. column</strong> 列(表由列组成,表中的一个字段,代表一列)</p><p><strong>6. datatype</strong> 数据类型(int varchar等,每个字段都有相应的数据类型,限制存入的数据种类,例如int类型不能存字符值)</p><p><strong>7. row</strong> 行(一行也就是一条数据库记录,但从技术上说,行才是正确的术语)</p><p><strong>8. primary key</strong> 主键</p><p><strong>9. sql</strong> Structured Query Language 结构化查询语言(与数据库通讯的语言)</p><p><strong>10. field</strong> 字段 基本上与column意思相同</p><p><strong>11. concatenate</strong> 拼接 将值连结到一起构成单个值</p><p><strong>12. join</strong> 联结</p><p><strong>13. foreign key</strong> 外键</p><p><strong>14. scale</strong> 可伸缩性 能够适应不断增加的工作量而不失败,设计良好的数据库或应用程序称之为可伸缩性好(scale well)</p><p><strong>15. view</strong> 视图</p><p><strong>16. variable</strong> 变量</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1. database&lt;/strong&gt; 数据库&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. DBMS&lt;/strong&gt; 数据库管理系统&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. table&lt;/strong&gt; 表 (结构化文件,存储某种特定类型的数据)&lt;/p&gt;
&lt;p&gt;&lt;s
      
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Mysql%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/tags/Mysql%E5%9F%BA%E7%A1%80/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Review 之常用sql语句</title>
    <link href="http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%B8%B8%E7%94%A8sql%E8%AF%AD%E5%8F%A5/"/>
    <id>http://www.pulsating.cn/2019/11/12/Mysql-Review-%E4%B9%8B%E5%B8%B8%E7%94%A8sql%E8%AF%AD%E5%8F%A5/</id>
    <published>2019-11-12T14:13:03.000Z</published>
    <updated>2019-11-12T15:32:24.578Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-综合"><a href="#一-综合" class="headerlink" title="一. 综合"></a>一. 综合</h3><ol><li>使用<strong>.sql</strong>脚本 <code>SOURCE + 脚本路径;</code></li><li>打开数据库 <code>USE database;</code></li><li>显示所有数据库名称 <code>SHOW databases;</code> </li><li>显示所有表名称 <code>SHOW tables;</code></li><li>显示表中的列及属性 <code>SHOW column FROM table_name;</code></li></ol><h3 id="二-检索-查询语句"><a href="#二-检索-查询语句" class="headerlink" title="二. 检索/查询语句"></a>二. 检索/查询语句</h3><h5 id="普通查询"><a href="#普通查询" class="headerlink" title="普通查询"></a>普通查询</h5><ol><li>检索某一列 <code>SELECT column_name FROM table_name;</code></li><li>检索所有列,使用 * 通配符 <code>SELECT * FROM table_name;</code><h5 id="DISTINCT"><a href="#DISTINCT" class="headerlink" title="DISTINCT"></a>DISTINCT</h5></li><li>检索结果去重 <code>SELECT DISTINCT column_name FROM TABLE_NAME</code><h5 id="LIMIT"><a href="#LIMIT" class="headerlink" title="LIMIT"></a>LIMIT</h5></li><li>限制检索结果行数</li></ol><ul><li><code>SELECT column FROM table_name LIMIT 5 ## 结果不超过5行</code></li><li><code>SELECT column FROM table_name 5,5 ## 返回从行5开始的5行</code></li><li><code>SELECT column FROM table_name 5 OFFSET 4 ## limit m,n的替代语法,返回5行,从行4开始</code>  <h5 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h5></li></ul><ol start="5"><li>检索结果排序</li></ol><ul><li><code>SELECT * FROM table_name ORDER BY id DESC 降序/倒序</code></li><li><code>SELECT * FROM table_name ORDER BY id ASC ## 升序/正序</code> </li></ul><ol start="6"><li>按多个列排序<code>SELECT * FROM table_name order by column1,column2;## 先按column1 排序,如果column1有2个或多个值相同,则再按照column2排序</code></li></ol><h5 id="WHERE子句"><a href="#WHERE子句" class="headerlink" title="WHERE子句"></a>WHERE子句</h5><ol start="7"><li><p><code>SELECT * FROM table_name WHERE price = 2.5;## 检索出价格为2.5的产品</code></p></li><li><p>WHERE 子句操作符</p></li></ol><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt;</td><td>不等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>BETWEEN m AND n</td><td>指定的两个值之间</td></tr></tbody></table><ol start="9"><li><p>空值检查 <code>WHERE column  IS NULL; ## 特殊的where 子句</code></p></li><li><p>逻辑操作符(operator)</p></li></ol><ul><li>and  <code>WHERE age = 19 AND score &gt; 80 ;</code></li><li>or <code>WHERE user_id = 1 or user_id = 2;</code>  </li><li>in <code>WHERE user_id in (1,2,3,4);</code></li><li>not 否定后跟条件的关键字</li></ul><p>11.使用通配符进行过滤<br>通配符(wildcard) 用来匹配值的一部分的特殊字符.<br>搜索模式(search pattern) 由字面值,通配符,或两者组合构成的搜索条件.</p><ul><li>百分号%通配符,可以在搜索模式的任意位置使用任意个通配符,<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">'rise%'</span>; <span class="comment">##检索以rise开头的用户名</span></span><br></pre></td></tr></table></figure></li><li>下划线_通配符,用途和%一样,但是只能匹配单个字符而不是多个<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> price <span class="keyword">LIKE</span> <span class="string">'_000'</span>; <span class="comment">##检索出价格为1000,2000等的商品</span></span><br></pre></td></tr></table></figure></li></ul><p>不要过度使用通配符,并且尽量不要在搜索模式的开始出使用,搜索速度巨慢!</p><ol start="11"><li>Mysql使用正则表达式<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="built_in">table_name</span> <span class="keyword">WHERE</span> prod_name REGEXP <span class="string">'正则表达式'</span>;</span><br></pre></td></tr></table></figure></li></ol><h5 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h5><ol start="12"><li><strong>Concat()</strong>拼接两个列   </li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 将两个列拼接起来,变成一个新字段vend-title,类似  <span class="string">'值name(location) '</span>的形式,同时去掉两个字段右侧的空格.</span><br><span class="line">## RTrim(),LTrim(),Trim()</span><br><span class="line">## <span class="keyword">AS</span> 用<span class="keyword">as</span>赋予别名 (又叫导出列)</span><br><span class="line"><span class="keyword">SELECT</span> Concat(RTrim(vend_name) , <span class="string">' ('</span>, RTrim(vend_country), <span class="string">') '</span>) <span class="keyword">AS</span> vend_title </span><br><span class="line"><span class="keyword">FROM</span> vendors</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> vend_name;</span><br></pre></td></tr></table></figure><ol start="13"><li>执行算术计算<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##通过单价和数量两个列运算出商品总价并形成一个新字段 expanded_price</span></span><br><span class="line"><span class="keyword">SELECT</span> prod_id,</span><br><span class="line">       quantity,</span><br><span class="line">       item_price,</span><br><span class="line">       quantity * item_price <span class="keyword">AS</span> expanded_price</span><br><span class="line"><span class="keyword">FROM</span> orderitems</span><br><span class="line"><span class="keyword">WHERE</span> order_num = <span class="number">20005</span>;</span><br></pre></td></tr></table></figure></li><li>测试计算</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">3</span> * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Trim</span>(<span class="string">'abc'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Now</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一-综合&quot;&gt;&lt;a href=&quot;#一-综合&quot; class=&quot;headerlink&quot; title=&quot;一. 综合&quot;&gt;&lt;/a&gt;一. 综合&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用&lt;strong&gt;.sql&lt;/strong&gt;脚本 &lt;code&gt;SOURCE + 脚本路径;&lt;/code&gt;&lt;
      
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Mysql" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Mysql/Mysql%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Mysql" scheme="http://www.pulsating.cn/tags/Mysql/"/>
    
      <category term="Mysql基础" scheme="http://www.pulsating.cn/tags/Mysql%E5%9F%BA%E7%A1%80/"/>
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
  </entry>
  
  <entry>
    <title>JS 通过User-Agent判断用户使用的设备 或平台</title>
    <link href="http://www.pulsating.cn/2019/11/12/JS-%E9%80%9A%E8%BF%87User-Agent%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E8%AE%BE%E5%A4%87-%E6%88%96%E5%B9%B3%E5%8F%B0/"/>
    <id>http://www.pulsating.cn/2019/11/12/JS-%E9%80%9A%E8%BF%87User-Agent%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E8%AE%BE%E5%A4%87-%E6%88%96%E5%B9%B3%E5%8F%B0/</id>
    <published>2019-11-12T14:08:21.000Z</published>
    <updated>2019-11-12T15:39:26.736Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> browser = &#123;</span></span><br><span class="line"><span class="actionscript">        versions: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> u = navigator.userAgent,</span></span><br><span class="line">                app = navigator.appVersion;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                trident: u.indexOf(<span class="string">'Trident'</span>) &gt; <span class="number">-1</span>, <span class="comment">//IE内核</span></span></span><br><span class="line"><span class="actionscript">                presto: u.indexOf(<span class="string">'Presto'</span>) &gt; <span class="number">-1</span>, <span class="comment">//opera内核</span></span></span><br><span class="line"><span class="actionscript">                webKit: u.indexOf(<span class="string">'AppleWebKit'</span>) &gt; <span class="number">-1</span>, <span class="comment">//苹果、谷歌内核</span></span></span><br><span class="line"><span class="actionscript">                gecko: u.indexOf(<span class="string">'Gecko'</span>) &gt; <span class="number">-1</span> &amp;&amp; u.indexOf(<span class="string">'KHTML'</span>) == <span class="number">-1</span>, <span class="comment">//火狐内核</span></span></span><br><span class="line"><span class="javascript">                mobile: !!u.match(<span class="regexp">/AppleWebKit.*Mobile.*/</span>), <span class="comment">//是否为移动终端</span></span></span><br><span class="line"><span class="javascript">                ios: !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>), <span class="comment">//ios终端</span></span></span><br><span class="line"><span class="actionscript">                android: u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span>, <span class="comment">//android终端</span></span></span><br><span class="line"><span class="actionscript">                iPhone: u.indexOf(<span class="string">'iPhone'</span>) &gt; <span class="number">-1</span>, <span class="comment">//是否为iPhone或者QQHD浏览器</span></span></span><br><span class="line"><span class="actionscript">                iPad: u.indexOf(<span class="string">'iPad'</span>) &gt; <span class="number">-1</span>, <span class="comment">//是否iPad</span></span></span><br><span class="line"><span class="actionscript">                webApp: u.indexOf(<span class="string">'Safari'</span>) == <span class="number">-1</span>, <span class="comment">//是否web应该程序，没有头部与底部</span></span></span><br><span class="line"><span class="actionscript">                weixin: u.indexOf(<span class="string">'MicroMessenger'</span>) &gt; <span class="number">-1</span>, <span class="comment">//是否微信 （2015-01-22新增）</span></span></span><br><span class="line"><span class="javascript">                qq: u.match(<span class="regexp">/\sQQ/i</span>) == <span class="string">" qq"</span>, <span class="comment">//是否QQ</span></span></span><br><span class="line"><span class="actionscript">                eleme: u.indexOf(<span class="string">'Needle'</span>) &gt; <span class="number">-1</span><span class="comment">//是否饿了么</span></span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;(),</span><br><span class="line">        language: (navigator.browserLanguage || navigator.language).toLowerCase()</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(browser[<span class="string">'versions'</span>][<span class="string">'eleme'</span>]);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span> (browser[<span class="string">'versions'</span>][<span class="string">'eleme'</span>])&#123;</span></span><br><span class="line">        show();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="前端" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="前端" scheme="http://www.pulsating.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://www.pulsating.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>图片懒加载 滚动加载 点击图片预览实现过程</title>
    <link href="http://www.pulsating.cn/2019/11/12/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD-%E6%BB%9A%E5%8A%A8%E5%8A%A0%E8%BD%BD-%E7%82%B9%E5%87%BB%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B/"/>
    <id>http://www.pulsating.cn/2019/11/12/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD-%E6%BB%9A%E5%8A%A8%E5%8A%A0%E8%BD%BD-%E7%82%B9%E5%87%BB%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B/</id>
    <published>2019-11-12T14:03:12.000Z</published>
    <updated>2019-11-12T15:36:48.335Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作者是个前端菜鸟,只能靠着东拼西凑才能生存下来这样子</p></blockquote><p>上次写了一个实现<strong>搜索框自动补全</strong>的小功能的文章,今天这个在其基础上,加入了几个新功能,两者卡可以结合使用,也可以分开独自使用,没有影响的,想了解的同学,可以先去了解一下,<strong><a href="https://www.jianshu.com/p/18047be090f4" target="_blank" rel="noopener">[传送门]</a></strong>,下面开始实现标题的功能</p><h4 id="1-准备阶段"><a href="#1-准备阶段" class="headerlink" title="1. 准备阶段"></a>1. 准备阶段</h4><ul><li><p><strong>WEUI</strong>: WEUI是一套同微信原生视觉体验一致的基础样式库,由微信官方设计团队为微信内网页和小程序量身定制,令用户感知更加统一,<a href="https://weui.io/" target="_blank" rel="noopener">点击进行在线体验</a>.</p></li><li><p><strong>Jquery WEUI</strong>:JQuery WeUI 是专为微信公众账号开发而设计的一个简洁而强大的UI库，包含全部WeUI官方的CSS组件，并且额外提供了大量的拓展组件，丰富的组件库可以极大减少前端开发时间,<a href="http://jqweui.com/" target="_blank" rel="noopener">JQuery WeUI官网</a>.</p></li><li><p><strong>ECHO JS</strong>:ECHO JS 是一个纯javascript轻量级延迟加载插件,用来实现懒加载部分</p></li></ul><a id="more"></a><h4 id="2-实现思路"><a href="#2-实现思路" class="headerlink" title="2. 实现思路"></a>2. 实现思路</h4><ul><li><p><strong>监听键盘</strong>:监听键盘的搜索动作(也就是Enter键), 接收到后台的数据后,循环append到img容器中,这里使用的是<code>WEUI</code>的九宫格,将三列调成了两列,将图片展示出来</p></li><li><p><strong>点击预览</strong> 监听用户的鼠标点击动作,当用户点击某一张图片时,调用<a href="http://jqweui.com/extends#photos" target="_blank" rel="noopener">Photo Browser</a>,并使用<code>pb.open();</code>打开预览图</p></li><li><p><strong>懒加载</strong> 将需要懒加载的img标签添加<code>data-echo</code>属性,并且将原src改为一张透明的loading gif图,echojs就会自动实现懒加载了,使用起来非常简单</p></li><li><p><strong>滚动加载</strong> 滚动加载使用的是JQuery WEUI的<a href="http://jqweui.com/extends#infinite" target="_blank" rel="noopener">infinite</a>,当滑动到最下面时,触发加载动作,向后台发起ajax请求,同时记录当前页数</p></li></ul><h4 id="3-不多B-上代码"><a href="#3-不多B-上代码" class="headerlink" title="3. 不多B,上代码"></a>3. 不多B,上代码</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图片搜索<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/jquery-weui-build/dist/lib/weui.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/jquery-weui-build/dist/css/jquery-weui.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/jquery-weui-build/demos/css/demos.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/jquery-ui/jquery-ui.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/jquery-3.3.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/jquery-weui-build/dist/js/jquery-weui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">'text/javascript'</span> <span class="attr">src</span>=<span class="string">'/static/jquery-weui-build/dist/js/swiper.js'</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/jquery-ui/jquery-ui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/waterfall/js/echo.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        echo.init(&#123;<span class="comment">//初始化echo.js</span></span></span><br><span class="line">            offset: 0,</span><br><span class="line">            throttle: 0</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#efeff4</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"body"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui-widget"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-search-bar"</span> <span class="attr">id</span>=<span class="string">"searchBar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__form"</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__box"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-icon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__input"</span> <span class="attr">id</span>=<span class="string">"tags"</span> <span class="attr">placeholder</span>=<span class="string">"搜索"</span> <span class="attr">required</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">class</span>=<span class="string">"weui-icon-clear"</span> <span class="attr">id</span>=<span class="string">"searchClear"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__label"</span> <span class="attr">id</span>=<span class="string">"searchText"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">style</span>=<span class="string">"transform-origin: 0px 0px 0px; opacity: 1; transform: scale(1, 1);"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-icon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__cancel-btn"</span> <span class="attr">id</span>=<span class="string">"searchCancel"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-grids"</span> <span class="attr">id</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-loadmore"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-loading"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"weui-loadmore__tips"</span>&gt;</span>正在加载<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> availableTags = [];<span class="comment">//数据源</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> keyword = <span class="string">''</span>;<span class="comment">//搜索关键字</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> page = <span class="number">1</span>;<span class="comment">//当前页数</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//先初始化自动补全功能</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#tags"</span>).autocomplete(&#123;</span></span><br><span class="line"><span class="actionscript">        source: availableTags <span class="comment">//数据源</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (!$(<span class="string">'#item'</span>).html())&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        $('.weui-loadmore').html('<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-loadmore weui-loadmore_line"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"weui-loadmore__tips"</span>&gt;</span>暂无数据<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span>');//样式需要调整</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//去掉字符串中任意位置的空格</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">Trim</span><span class="params">(str, is_global)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> result;</span></span><br><span class="line"><span class="javascript">        result = str.replace(<span class="regexp">/(^\s+)|(\s+$)/g</span>, <span class="string">""</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (is_global.toLowerCase() == <span class="string">"g"</span>) &#123;</span></span><br><span class="line"><span class="javascript">            result = result.replace(<span class="regexp">/\s/g</span>, <span class="string">""</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> result;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//判断字符串是否全是中文</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">isChn</span><span class="params">(str)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> reg = <span class="regexp">/^[\u4E00-\u9FA5]+$/</span>;</span></span><br><span class="line">        if (!reg.test(str)) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//请求后端获取数据源</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">get_source</span><span class="params">(word = null)</span> </span>&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        var url = "<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> base_url(<span class="string">'Picture/source'</span>);<span class="meta">?&gt;</span></span>?keyword=" + word;</span></span></span><br><span class="line"><span class="javascript">        $.<span class="keyword">get</span>(&#123;</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'GET'</span>,</span></span><br><span class="line">            url: url,</span><br><span class="line"><span class="javascript">            <span class="keyword">async</span>: <span class="literal">false</span>,<span class="comment">//改为同步</span></span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</span></span><br><span class="line">                availableTags = response;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//搜索和自动补全结合</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#tags'</span>).keyup(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        keyword = $(<span class="string">'#tags'</span>).val();</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (event.which == <span class="string">'13'</span>) &#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#item'</span>).empty();<span class="comment">//初始化图片列表</span></span></span><br><span class="line"><span class="actionscript">            page = <span class="number">1</span>;<span class="comment">//初始化当前页</span></span></span><br><span class="line">            call();</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (isChn(Trim(keyword, <span class="string">'g'</span>))) &#123;</span></span><br><span class="line">            get_source(keyword);</span><br><span class="line"><span class="javascript">            $(<span class="string">"#tags"</span>).autocomplete(&#123;</span></span><br><span class="line"><span class="actionscript">                source: availableTags <span class="comment">//数据源</span></span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//向后台请求数据</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        var pay_url = "<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> base_url(<span class="string">'Picture/search'</span>);<span class="meta">?&gt;</span></span>";</span></span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'GET'</span>,</span></span><br><span class="line"><span class="actionscript">            url: pay_url + <span class="string">'?keyword='</span> + keyword + <span class="string">'&amp;page='</span> + page, <span class="comment">//搜索</span></span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(data)</span> </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (data[<span class="string">'errno'</span>] == <span class="number">40001</span>)&#123;</span></span><br><span class="line">                    no_data_style();</span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="handlebars"><span class="xml">                $('.weui-loadmore').html('<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-loading"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"weui-loadmore__tips"</span>&gt;</span>正在加载<span class="tag">&lt;/<span class="name">span</span>&gt;</span>');</span></span></span><br><span class="line"><span class="javascript">                $.each(data, <span class="function"><span class="keyword">function</span> (<span class="params">index, item</span>) </span>&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    $('#item').append('<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">class</span>=<span class="string">"weui-grid"</span> <span class="attr">style</span>=<span class="string">"width: 50%;"</span> <span class="attr">onclick</span>=<span class="string">big_img(</span>"'+<span class="attr">item.img</span>+'","'+<span class="attr">Trim</span>(<span class="attr">item.name</span>, '<span class="attr">g</span>')+'")&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/static/img/index_32.png"</span> <span class="attr">data-echo</span>=<span class="string">"'+item.img+'"</span> <span class="attr">alt</span>=<span class="string">"'+item.name+'"</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-align: center;font-size: 12px;color: black;margin-top: 10px"</span>&gt;</span>'+item.name+'<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>');</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    if (data.length <span class="tag">&lt;<span class="name">=</span> <span class="attr">8</span> &amp;&amp; <span class="attr">page</span> == <span class="string">1)&#123;</span></span></span></span></span><br><span class="line">                        no_data_style();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"><span class="actionscript">                echo.init(&#123;<span class="comment">//获得数据后初始化echojs</span></span></span><br><span class="line">                    offset: 0,</span><br><span class="line">                    throttle: 0</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">no_data_style</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'.weui-loadmore'</span>).empty();</span></span><br><span class="line"><span class="handlebars"><span class="xml">        $('.weui-loadmore').append('<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-loadmore weui-loadmore_line"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"weui-loadmore__tips"</span>&gt;</span>暂无更多<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span>');//样式需要调整</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--点击预览全图--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">big_img</span><span class="params">(img,name)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> imgs = [&#123;<span class="string">'image'</span>:img,<span class="string">'caption'</span>:name&#125;];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pb = $.photoBrowser(&#123;</span></span><br><span class="line">            items: imgs,</span><br><span class="line">        &#125;);</span><br><span class="line">        pb.open();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--滚动加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//滚动加载</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> loading = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>.body).infinite().on(<span class="string">"infinite"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (loading) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="actionscript">        loading = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">        setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">            page++;</span><br><span class="line">            call();</span><br><span class="line"><span class="actionscript">            loading = <span class="literal">false</span>;</span></span><br><span class="line">            echo.init(&#123;</span><br><span class="line">                offset: 0,</span><br><span class="line">                throttle: 0</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, 1000);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作者是个前端菜鸟,只能靠着东拼西凑才能生存下来这样子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上次写了一个实现&lt;strong&gt;搜索框自动补全&lt;/strong&gt;的小功能的文章,今天这个在其基础上,加入了几个新功能,两者卡可以结合使用,也可以分开独自使用,没有影响的,想了解的同学,可以先去了解一下,&lt;strong&gt;&lt;a href=&quot;https://www.jianshu.com/p/18047be090f4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[传送门]&lt;/a&gt;&lt;/strong&gt;,下面开始实现标题的功能&lt;/p&gt;
&lt;h4 id=&quot;1-准备阶段&quot;&gt;&lt;a href=&quot;#1-准备阶段&quot; class=&quot;headerlink&quot; title=&quot;1. 准备阶段&quot;&gt;&lt;/a&gt;1. 准备阶段&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WEUI&lt;/strong&gt;: WEUI是一套同微信原生视觉体验一致的基础样式库,由微信官方设计团队为微信内网页和小程序量身定制,令用户感知更加统一,&lt;a href=&quot;https://weui.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击进行在线体验&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jquery WEUI&lt;/strong&gt;:JQuery WeUI 是专为微信公众账号开发而设计的一个简洁而强大的UI库，包含全部WeUI官方的CSS组件，并且额外提供了大量的拓展组件，丰富的组件库可以极大减少前端开发时间,&lt;a href=&quot;http://jqweui.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JQuery WeUI官网&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ECHO JS&lt;/strong&gt;:ECHO JS 是一个纯javascript轻量级延迟加载插件,用来实现懒加载部分&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="前端" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="前端" scheme="http://www.pulsating.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://www.pulsating.cn/tags/JavaScript/"/>
    
      <category term="WeUI" scheme="http://www.pulsating.cn/tags/WeUI/"/>
    
      <category term="Jquery WEUI" scheme="http://www.pulsating.cn/tags/Jquery-WEUI/"/>
    
      <category term="ECHO JS" scheme="http://www.pulsating.cn/tags/ECHO-JS/"/>
    
      <category term="懒加载" scheme="http://www.pulsating.cn/tags/%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>搜索框自动补全(模糊匹配)功能实现</title>
    <link href="http://www.pulsating.cn/2019/11/12/%E6%90%9C%E7%B4%A2%E6%A1%86%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8-%E6%A8%A1%E7%B3%8A%E5%8C%B9%E9%85%8D-%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.pulsating.cn/2019/11/12/%E6%90%9C%E7%B4%A2%E6%A1%86%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8-%E6%A8%A1%E7%B3%8A%E5%8C%B9%E9%85%8D-%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</id>
    <published>2019-11-12T13:57:06.000Z</published>
    <updated>2019-11-12T15:36:59.764Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;本地实现了一个搜索框自动补全的小功能,在JQuery UI的autocomplete插件的基础上,加入了自己的业务代码,贴出来回顾一下,同时可以给大家一个参考</p><a id="more"></a><p>&emsp;&emsp;首先贴出的是JQuery Ui 的自动补全插件部分的代码,后面的功能都是在其基础上追加的,直接拷贝到你的本地就可以直观的看到运行效果,也可以到官网上面体验和查看,为了方便,我这里是直接引入的JS链接<a href="https://jqueryui.com/download/" target="_blank" rel="noopener">点击下载JQuery UI的源码</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>jQuery UI Autocomplete - Default functionality<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/resources/demos/style.css"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/ui/1.12.1/jquery-ui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  $( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> availableTags = [<span class="comment">//这里要改成根据用户的输入,自动更换词库的形式</span></span></span><br><span class="line"><span class="actionscript">      <span class="string">"ActionScript"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"AppleScript"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Asp"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"BASIC"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"C"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"C++"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Clojure"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"COBOL"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"ColdFusion"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Erlang"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Fortran"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Groovy"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Haskell"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Java"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"JavaScript"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Lisp"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Perl"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"PHP"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Python"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Ruby"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Scala"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"Scheme"</span></span></span><br><span class="line">    ];</span><br><span class="line"><span class="javascript">    $( <span class="string">"#tags"</span> ).autocomplete(&#123;<span class="comment">//调用补全功能</span></span></span><br><span class="line">      source: availableTags</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; );</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui-widget"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"tags"</span>&gt;</span>Tags: <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"tags"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行截图</p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-228044e216af0634.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="jquery-ui的自动补全功能截图"></p><p><strong>下面说下我追加的部分功能及实现思路,有可以改进的地方还请指教:</strong></p><ol><li><p>首先,数据源要根据用户输入的内容实时更新.<br>输入框的值随着用户的输入会一直变动.所以,输入框下方的推荐补全的内容要输入的值进行变动,这里使用onkeyup属性来监听键盘动作,并传递此时input的value值到js函数中.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//html</span></span><br><span class="line">&lt;input type=<span class="string">"search"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">""</span> id=<span class="string">"tags"</span> placeholder=<span class="string">"搜索"</span> required=<span class="string">""</span> onkeyup=<span class="string">"catch_keyword(this.value)"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//js代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">catch_keyword</span>(<span class="params">word</span>) </span>&#123;<span class="comment">//这里接受并log出value</span></span><br><span class="line">    <span class="built_in">console</span>.log(word);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>第2步,考虑到数据库中需要模糊检索的字段都是中文的菜品名称.所以,当用户输入字母的时候,进行了一下过滤,当输入的内容中存在字母时,不提交给后台处理</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串判断函数</span></span><br><span class="line"><span class="comment">//判断一个字符串是否混有字母,全中文返回true</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isChn</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="regexp">/^[\u4E00-\u9FA5]+$/</span>;</span><br><span class="line">    <span class="keyword">if</span> (!reg.test(str)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>发现当字符串中含有空格的时候,上面的字符串判断函数,返回的内容不符合预期,然后加入了一个去除字符串中所有空格的功能</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//去掉字符串中任意位置的空格,返回去除空格后的字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Trim</span>(<span class="params">str, is_global</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result;</span><br><span class="line">    result = str.replace(<span class="regexp">/(^\s+)|(\s+$)/g</span>, <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">if</span> (is_global.toLowerCase() == <span class="string">"g"</span>) &#123;</span><br><span class="line">        result = result.replace(<span class="regexp">/\s/g</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>处理结束用户的输入后,就是提交到后台,然后返回数据源了,也就是availableTags;这里我把availableTags声明为全局变量.并且用同步的Ajax方式取回数据,然后赋值给availableTags,然后在监听键盘的函数中,使用返回的数据调用自动补全功能.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求后端获取数据源</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_source</span>(<span class="params">word = null</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">"&lt;?php echo base_url('admin/Demo/source');?&gt;?keyword="</span> + word;</span><br><span class="line">    $.<span class="keyword">get</span>(&#123;</span><br><span class="line">        type: <span class="string">'GET'</span>,</span><br><span class="line">        url: url,</span><br><span class="line">        <span class="keyword">async</span>: <span class="literal">false</span>,<span class="comment">//改为同步</span></span><br><span class="line">        dataType: <span class="string">'json'</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'1'</span>);</span><br><span class="line">            availableTags = response;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>&emsp;这里更新下最开始的接收监听键盘后的value值的函数</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//捕捉键入的关键字</span></span><br><span class="line"><span class="keyword">function</span> catch<span class="constructor">_keyword(<span class="params">word</span> = <span class="params">null</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (is<span class="constructor">Chn(Trim(<span class="params">word</span>, '<span class="params">g</span>')</span>)) &#123;<span class="comment">//去掉空格后检查字符串,如果符合,继续请求后台</span></span><br><span class="line">        get<span class="constructor">_source(<span class="params">word</span>)</span>;</span><br><span class="line">        <span class="constructor">$(<span class="string">"#tags"</span>)</span>.autocomplete(&#123;</span><br><span class="line">            source: availableTags <span class="comment">//数据源</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>到这里,这个功能已经基本结束了,在测试过程中发现了一个小问题,<strong>每次第一次获取用户输入的时候,自动补全功能没有触发,在用户继续输入后,才触发成功</strong>,经过调试,我在页面加载完成后,初始化一下自动补全插件,解决了这个问题</li></ol><p><strong>附: 完整代码</strong><br>不知道如何在markdown中添加下载链接,只好把完整代码放上来啦!</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/jquery-weui-build/dist/lib/weui.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/jquery-weui-build/dist/css/jquery-weui.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/jquery-weui-build/demos/css/demos.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-1.12.4.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/jquery-weui-build/dist/lib/fastclick.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/ui/1.12.1/jquery-ui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            FastClick.attach(<span class="built_in">document</span>.body);</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/jquery-weui-build/dist/js/jquery-weui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui-widget"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-search-bar"</span> <span class="attr">id</span>=<span class="string">"searchBar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__form"</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__box"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-icon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__input"</span> <span class="attr">id</span>=<span class="string">"tags"</span> <span class="attr">placeholder</span>=<span class="string">"搜索"</span> <span class="attr">required</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">onkeyup</span>=<span class="string">"catch_keyword(this.value)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">class</span>=<span class="string">"weui-icon-clear"</span> <span class="attr">id</span>=<span class="string">"searchClear"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__label"</span> <span class="attr">id</span>=<span class="string">"searchText"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">style</span>=<span class="string">"transform-origin: 0px 0px 0px; opacity: 1; transform: scale(1, 1);"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"weui-icon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">class</span>=<span class="string">"weui-search-bar__cancel-btn"</span> <span class="attr">id</span>=<span class="string">"searchCancel"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> availableTags = [];<span class="comment">//数据源</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//先初始化自动补全功能</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#tags"</span>).autocomplete(&#123;</span></span><br><span class="line"><span class="actionscript">        source: availableTags <span class="comment">//数据源</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//去掉字符串中任意位置的空格</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">Trim</span><span class="params">(str, is_global)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> result;</span></span><br><span class="line"><span class="javascript">        result = str.replace(<span class="regexp">/(^\s+)|(\s+$)/g</span>, <span class="string">""</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (is_global.toLowerCase() == <span class="string">"g"</span>) &#123;</span></span><br><span class="line"><span class="javascript">            result = result.replace(<span class="regexp">/\s/g</span>, <span class="string">""</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> result;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//判断字符串是否全是中文</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">isChn</span><span class="params">(str)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> reg = <span class="regexp">/^[\u4E00-\u9FA5]+$/</span>;</span></span><br><span class="line">        if (!reg.test(str)) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//捕捉键入的关键字</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">catch_keyword</span><span class="params">(word = null)</span> </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (isChn(Trim(word, <span class="string">'g'</span>))) &#123;</span></span><br><span class="line">            get_source(word);</span><br><span class="line"><span class="javascript">            $(<span class="string">"#tags"</span>).autocomplete(&#123;</span></span><br><span class="line"><span class="actionscript">                source: availableTags <span class="comment">//数据源</span></span></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//请求后端获取数据源</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">get_source</span><span class="params">(word = null)</span> </span>&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        var url = "<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> base_url(<span class="string">'admin/Demo/source'</span>);<span class="meta">?&gt;</span></span>?keyword=" + word;</span></span></span><br><span class="line"><span class="javascript">        $.<span class="keyword">get</span>(&#123;</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'GET'</span>,</span></span><br><span class="line">            url: url,</span><br><span class="line"><span class="javascript">            <span class="keyword">async</span>: <span class="literal">false</span>,<span class="comment">//改为同步</span></span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'1'</span>);</span></span><br><span class="line">                availableTags = response;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;本地实现了一个搜索框自动补全的小功能,在JQuery UI的autocomplete插件的基础上,加入了自己的业务代码,贴出来回顾一下,同时可以给大家一个参考&lt;/p&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="前端" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
      <category term="JQuery UI" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/JavaScript/JQuery-UI/"/>
    
      <category term="autocomplete" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E5%89%8D%E7%AB%AF/JavaScript/JQuery-UI/autocomplete/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="前端" scheme="http://www.pulsating.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://www.pulsating.cn/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="http://www.pulsating.cn/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>查看Andriod手机实时刷新率</title>
    <link href="http://www.pulsating.cn/2019/11/12/%E6%9F%A5%E7%9C%8BAndriod%E6%89%8B%E6%9C%BA%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E7%8E%87/"/>
    <id>http://www.pulsating.cn/2019/11/12/%E6%9F%A5%E7%9C%8BAndriod%E6%89%8B%E6%9C%BA%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0%E7%8E%87/</id>
    <published>2019-11-12T13:53:56.000Z</published>
    <updated>2019-11-12T15:37:05.825Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-下载ADB"><a href="#1-下载ADB" class="headerlink" title="1. 下载ADB"></a>1. 下载ADB</h4><h4 id="2-adb-shell-quot-dumpsys-window-grep-mCurrentFocus-获取app包名"><a href="#2-adb-shell-quot-dumpsys-window-grep-mCurrentFocus-获取app包名" class="headerlink" title="2. adb shell &quot;dumpsys window|grep mCurrentFocus  获取app包名"></a>2. <code>adb shell &quot;dumpsys window|grep mCurrentFocus</code>  获取app包名</h4><h4 id="3-操作需测试的app"><a href="#3-操作需测试的app" class="headerlink" title="3. 操作需测试的app"></a>3. 操作需测试的app</h4><h4 id="4-adb-shell-dumpsys-gfxinfo-‘app的包名’-gt-FPS-txt-输出日志"><a href="#4-adb-shell-dumpsys-gfxinfo-‘app的包名’-gt-FPS-txt-输出日志" class="headerlink" title="4. adb shell dumpsys gfxinfo ‘app的包名’  &gt;FPS.txt  输出日志"></a>4. adb shell dumpsys gfxinfo ‘app的包名’  &gt;FPS.txt  输出日志</h4><h4 id="5-打开查看Profile-data-in-ms下的内容"><a href="#5-打开查看Profile-data-in-ms下的内容" class="headerlink" title="5. 打开查看Profile data in ms下的内容:"></a>5. 打开查看<code>Profile data in ms</code>下的内容:</h4><p><code>FPS = 1000/Draw + Prepare + Process + Execute</code></p><p><img src="https://upload-images.jianshu.io/upload_images/14618365-1b54255c3ec7b157.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1551852181(1).jpg"></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-下载ADB&quot;&gt;&lt;a href=&quot;#1-下载ADB&quot; class=&quot;headerlink&quot; title=&quot;1. 下载ADB&quot;&gt;&lt;/a&gt;1. 下载ADB&lt;/h4&gt;&lt;h4 id=&quot;2-adb-shell-quot-dumpsys-window-grep-mCurrentFocus-获取app包名&quot;&gt;&lt;a href=&quot;#2-adb-shell-quot-dumpsys-window-grep-mCurrentFocus-获取app包名&quot; class=&quot;headerlink&quot; title=&quot;2. adb shell &amp;quot;dumpsys window|grep mCurrentFocus  获取app包名&quot;&gt;&lt;/a&gt;2. &lt;code&gt;adb shell &amp;quot;dumpsys window|grep mCurrentFocus&lt;/code&gt;  获取app包名&lt;/h4&gt;&lt;h4 id=&quot;3-操作需测试的app&quot;&gt;&lt;a href=&quot;#3-操作需测试的app&quot; class=&quot;headerlink&quot; title=&quot;3. 操作需测试的app&quot;&gt;&lt;/a&gt;3. 操作需测试的app&lt;/h4&gt;&lt;h4 id=&quot;4-adb-shell-dumpsys-gfxinfo-‘app的包名’-gt-FPS-txt-输出日志&quot;&gt;&lt;a href=&quot;#4-adb-shell-dumpsys-gfxinfo-‘app的包名’-gt-FPS-txt-输出日志&quot; class=&quot;headerlink&quot; title=&quot;4. adb shell dumpsys gfxinfo ‘app的包名’  &amp;gt;FPS.txt  输出日志&quot;&gt;&lt;/a&gt;4. adb shell dumpsys gfxinfo ‘app的包名’  &amp;gt;FPS.txt  输出日志&lt;/h4&gt;&lt;h4 id=&quot;5-打开查看Profile-data-in-ms下的内容&quot;&gt;&lt;a href=&quot;#5-打开查看Profile-data-in-ms下的内容&quot; class=&quot;headerlink&quot; title=&quot;5. 打开查看Profile data in ms下的内容:&quot;&gt;&lt;/a&gt;5. 打开查看&lt;code&gt;Profile data in ms&lt;/code&gt;下的内容:&lt;/h4&gt;&lt;p&gt;&lt;code&gt;FPS = 1000/Draw + Prepare + Process + Execute&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/14618365-1b54255c3ec7b157.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;1551852181(1).jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="杂" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/%E6%9D%82/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="adb" scheme="http://www.pulsating.cn/tags/adb/"/>
    
      <category term="Andriod" scheme="http://www.pulsating.cn/tags/Andriod/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建个人博客</title>
    <link href="http://www.pulsating.cn/2019/11/12/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.pulsating.cn/2019/11/12/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-11-12T02:59:00.000Z</published>
    <updated>2019-11-12T15:39:54.999Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="Blog" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Blog/"/>
    
      <category term="Hexo" scheme="http://www.pulsating.cn/categories/%E5%A4%A7%E7%86%8ABIGBEAR/Blog/Hexo/"/>
    
    
      <category term="大熊BIGBEAR" scheme="http://www.pulsating.cn/tags/%E5%A4%A7%E7%86%8ABIGBEAR/"/>
    
      <category term="article" scheme="http://www.pulsating.cn/tags/article/"/>
    
      <category term="建站" scheme="http://www.pulsating.cn/tags/%E5%BB%BA%E7%AB%99/"/>
    
      <category term="SPA" scheme="http://www.pulsating.cn/tags/SPA/"/>
    
      <category term="教程" scheme="http://www.pulsating.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
